<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Framework.Entity</name>
    </assembly>
    <members>
        <member name="T:Framework.Entity.RouteRequireAttribute">
            <summary>
            路由要求
            </summary>
        </member>
        <member name="T:Framework.Entity.MapKind">
            <summary>
            语言映射的字段
            </summary>
        </member>
        <member name="F:Framework.Entity.MapKind.Major">
            <summary>
            语言主码
            </summary>
        </member>
        <member name="F:Framework.Entity.MapKind.Minor">
            <summary>
            语言次码
            </summary>
        </member>
        <member name="F:Framework.Entity.MapKind.Message">
            <summary>
            语种表达式文本
            </summary>
        </member>
        <member name="F:Framework.Entity.MapKind.Spelling">
            <summary>
            语种表达式助记码
            </summary>
        </member>
        <member name="T:Framework.Entity.SeriesType">
            <summary>
            序列号类型
            </summary>
        </member>
        <member name="F:Framework.Entity.SeriesType.Serial">
            <summary>
            累计序列类型(1,2,3～999999)
            </summary> 
        </member>
        <member name="F:Framework.Entity.SeriesType.DailySerial">
            <summary>
            按日的序列类型(1,2,3～999999)
            </summary>
        </member>
        <member name="F:Framework.Entity.SeriesType.Prefix">
            <summary>
            前缀类型(X00001～X99999,需要指明格式化字符串FormatString)。
            </summary> 
        </member>
        <member name="F:Framework.Entity.SeriesType.Day">
            <summary>
            日期类型(20080808X0001～20080808X9999)
            </summary> 
        </member>
        <member name="F:Framework.Entity.SeriesType.Month">
            <summary>
            月份类型(200808X0001～200808X9999)
            </summary> 
        </member>
        <member name="F:Framework.Entity.SeriesType.Year">
            <summary>
            年度类型(2008X0001～2008X9999)
            </summary>
        </member>
        <member name="F:Framework.Entity.SeriesType.Time">
            <summary>
            时间序列型，如果未设置连接字符串则以本机时间为依据。
            <para>精度到微秒的20位时间字符串，每微秒最多只能产生一个序列号，理论上该值是唯一的，例如:20080808235959888001。</para>
            </summary> 
        </member>
        <member name="T:Framework.Entity.AccessTokenItem">
            <summary>
            访问令牌数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.AccessTokenItem.Token">
            <summary>
            访问令牌
            </summary>
        </member>
        <member name="P:Framework.Entity.AccessTokenItem.CreateTime">
            <summary>
            令牌创建时间
            </summary>
        </member>
        <member name="P:Framework.Entity.AccessTokenItem.AccessTime">
            <summary>
            最后访问时间
            </summary>
        </member>
        <member name="P:Framework.Entity.AccessTokenItem.RequestContext">
            <summary>
            请求上下文内容
            </summary>
        </member>
        <member name="P:Framework.Entity.AccessTokenItem.ResponseContext">
            <summary>
            应答上下文内容
            </summary>
        </member>
        <member name="P:Framework.Entity.AccessTokenItem.LoginContext">
            <summary>
            登录上下文内容
            </summary>
        </member>
        <member name="T:Framework.Entity.Department">
            <summary>
            组织机构/部门/科室
            </summary>
        </member>
        <member name="P:Framework.Entity.Department.Code">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Framework.Entity.Department.Text">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Framework.Entity.Department.ToString">
            <summary>
            返回组织机构编号
            </summary>
        </member>
        <member name="M:Framework.Entity.Department.op_Implicit(Framework.Entity.Department)~System.String">
            <summary />
        </member>
        <member name="M:Framework.Entity.Department.op_Implicit(System.String)~Framework.Entity.Department">
            <summary />
        </member>
        <member name="M:Framework.Entity.Department.op_Equality(Framework.Entity.Department,Framework.Entity.Department)">
            <summary />
        </member>
        <member name="M:Framework.Entity.Department.op_Inequality(Framework.Entity.Department,Framework.Entity.Department)">
            <summary />
        </member>
        <member name="M:Framework.Entity.Department.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:Framework.Entity.Department.GetHashCode">
            <summary />
        </member>
        <member name="T:Framework.Entity.Dictionary">
            <summary>
            字典项
            </summary>
        </member>
        <member name="P:Framework.Entity.Dictionary.ID">
            <summary>
            内码,唯一码
            </summary>
        </member>
        <member name="P:Framework.Entity.Dictionary.Code">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Framework.Entity.Dictionary.Text">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Framework.Entity.Dictionary.To``1(System.Boolean)">
            <summary>
            字典编号输出为泛型类型枚举值。
            </summary>
            <typeparam name="T">字典泛型类型</typeparam>
            <param name="throwError">不能有效识别为泛型类型枚举值时是否抛出异常</param>
        </member>
        <member name="M:Framework.Entity.Dictionary.ToString">
            <summary>
            返回表示当前字典项的字符串表达式
            </summary>
        </member>
        <member name="M:Framework.Entity.Dictionary.op_Implicit(Framework.Entity.Dictionary)~System.String">
            <summary />
        </member>
        <member name="M:Framework.Entity.Dictionary.op_Implicit(System.String)~Framework.Entity.Dictionary">
            <summary />
        </member>
        <member name="M:Framework.Entity.Dictionary.op_Equality(Framework.Entity.Dictionary,Framework.Entity.Dictionary)">
            <summary />
        </member>
        <member name="M:Framework.Entity.Dictionary.op_Inequality(Framework.Entity.Dictionary,Framework.Entity.Dictionary)">
            <summary />
        </member>
        <member name="M:Framework.Entity.Dictionary.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:Framework.Entity.Dictionary.GetHashCode">
            <summary />
        </member>
        <member name="T:Framework.Entity.SynchroLogDetailItem">
            <summary>
            同步日志明细数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogDetailItem.LogID">
            <summary>
            同步日志编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogDetailItem.SyncOrdinal">
            <summary>
            同步顺序号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogDetailItem.TableName">
            <summary>
            同步的表名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogDetailItem.SynchroCount">
            <summary>
            同步的数据数目
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogDetailItem.StartStamp">
            <summary>
            同步的开始时间戳
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogDetailItem.EndStamp">
            <summary>
            同步的结束时间戳
            </summary>
        </member>
        <member name="T:Framework.Entity.SystemConfigItem">
            <summary>
            系统配置数据实体
            </summary>
        </member>
        <member name="F:Framework.Entity.SystemConfigItem.ROOT">
            <summary>
            顶级根节点
            </summary>
        </member>
        <member name="P:Framework.Entity.SystemConfigItem.Name">
            <summary>
            配置名
            </summary>
        </member>
        <member name="P:Framework.Entity.SystemConfigItem.Value">
            <summary>
            配置值
            </summary>
        </member>
        <member name="P:Framework.Entity.SystemConfigItem.Text">
            <summary>
            配置标题
            </summary>
        </member>
        <member name="P:Framework.Entity.SystemConfigItem.Remark">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="P:Framework.Entity.SystemConfigItem.OwnerName">
            <summary>
            父配置名
            </summary>
        </member>
        <member name="P:Framework.Entity.SystemConfigItem.Ordinal">
            <summary>
            顺序号
            </summary>
        </member>
        <member name="M:Framework.Entity.SystemConfigItem.GetValue``1">
            <summary>
            获取值的解析类型数据
            </summary>
            <typeparam name="T">指定的需要解析的类型</typeparam>
        </member>
        <member name="T:Framework.Entity.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:Framework.Entity.User.DbCode">
            <summary>
            操作员归属的数据编号(唯一编码)。
            </summary>
        </member>
        <member name="P:Framework.Entity.User.ID">
            <summary>
            操作员唯一编号
            </summary>
        </member>
        <member name="P:Framework.Entity.User.Code">
            <summary>
            操作员登录账号
            </summary>
        </member>
        <member name="P:Framework.Entity.User.Name">
            <summary>
            操作员姓名
            </summary>
        </member>
        <member name="M:Framework.Entity.User.ToString">
            <summary>
            返回用户唯一内码
            </summary>
        </member>
        <member name="M:Framework.Entity.User.op_Implicit(Framework.Entity.User)~System.String">
            <summary />
        </member>
        <member name="M:Framework.Entity.User.op_Implicit(System.String)~Framework.Entity.User">
            <summary />
        </member>
        <member name="M:Framework.Entity.User.op_Equality(Framework.Entity.User,Framework.Entity.User)">
            <summary />
        </member>
        <member name="M:Framework.Entity.User.op_Inequality(Framework.Entity.User,Framework.Entity.User)">
            <summary />
        </member>
        <member name="M:Framework.Entity.User.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:Framework.Entity.User.GetHashCode">
            <summary />
        </member>
        <member name="T:Framework.Entity.SuggestItem">
            <summary>
            意见反馈
            </summary>
        </member>
        <member name="P:Framework.Entity.SuggestItem.SuggestID">
            <summary> 
            意见反馈编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SuggestItem.Summary">
            <summary> 
            意见反馈标题
            </summary>
        </member>
        <member name="P:Framework.Entity.SuggestItem.Content">
            <summary> 
            意见反馈详细内容
            </summary>
        </member>
        <member name="P:Framework.Entity.SuggestItem.Level">
            <summary> 
            意见反馈处理紧急等级
            </summary>
        </member>
        <member name="P:Framework.Entity.SuggestItem.UserID">
            <summary> 
            操作员编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SuggestItem.CreateDate">
            <summary> 
            用户提交反馈时间
            </summary>
        </member>
        <member name="T:Framework.Entity.CallingAttribute">
            <summary>
            数据传输模式
            </summary>
        </member>
        <member name="P:Framework.Entity.CallingAttribute.Encrypt">
            <summary>
            数据加密传输
            </summary>
        </member>
        <member name="P:Framework.Entity.CallingAttribute.Compress">
            <summary>
            数据压缩传输
            </summary>
        </member>
        <member name="P:Framework.Entity.CallingAttribute.Serialize">
            <summary>
            数据串行化模式
            </summary>
        </member>
        <member name="M:Framework.Entity.CallingAttribute.#ctor">
            <summary>
            实例化数据传输模式(默认压缩、非加密)。
            </summary>
        </member>
        <member name="M:Framework.Entity.CallingAttribute.#ctor(Framework.Entity.SerializeType)">
            <summary>
            实例化数据传输模式(默认压缩、非加密)。
            </summary>
            <param name="serialize">串行化模式</param>
        </member>
        <member name="T:Framework.Entity.Attributes.ImportAttribute">
            <summary>
            导入程序集定义
            </summary>
        </member>
        <member name="P:Framework.Entity.Attributes.ImportAttribute.AssemblyName">
            <summary>
            程序集名称
            </summary>
        </member>
        <member name="M:Framework.Entity.Attributes.ImportAttribute.#ctor(System.String)">
            <summary>
            导入程序集定义
            </summary>
            <param name="assemblyName">程序集名称</param>
        </member>
        <member name="T:Framework.Entity.LanguageAttribute">
            <summary>
            语言数据实体映射
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageAttribute.Map">
            <summary>
            映射字段
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageAttribute.Group">
            <summary>
            映射分组
            </summary>
        </member>
        <member name="M:Framework.Entity.LanguageAttribute.#ctor(Framework.Entity.MapKind,System.Int32)">
            <summary>
            实例化语言字段映射(当只有一组映射时忽略组号)。
            </summary>
            <param name="map">映射的字段</param>
            <param name="group">映射分组</param>
        </member>
        <member name="T:Framework.Entity.MappingAttribute">
            <summary>
            代理调用的程序集名称、类型名称的映射关系
            </summary>
        </member>
        <member name="M:Framework.Entity.MappingAttribute.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:Framework.Entity.MappingAttribute.#ctor(System.String)">
            <summary>
            实例化
            </summary>
            <param name="callName">调用函数名</param>
        </member>
        <member name="P:Framework.Entity.MappingAttribute.Assembly">
            <summary>
            程序集名称
            </summary>
        </member>
        <member name="P:Framework.Entity.MappingAttribute.Class">
            <summary>
            类名称
            </summary>
        </member>
        <member name="P:Framework.Entity.MappingAttribute.CallName">
            <summary>
            调用函数名称
            </summary>
        </member>
        <member name="T:Framework.Entity.PurviewAttribute">
            <summary>
            权限点声明
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewAttribute.Name">
            <summary>
            权限点名称
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewAttribute.Text">
            <summary>
            权限点标题(描述)
            </summary>
        </member>
        <member name="M:Framework.Entity.PurviewAttribute.#ctor(System.String,System.String)">
            <summary>
            权限点声明
            </summary>
            <param name="name">权限点名称</param>
            <param name="text">权限点标题(描述)</param>
        </member>
        <member name="T:Framework.Entity.QueryAttribute">
            <summary>
            备份数据查询
            </summary>
        </member>
        <member name="P:Framework.Entity.QueryAttribute.QueryMode">
            <summary>
            备份查询模式
            </summary>
        </member>
        <member name="M:Framework.Entity.QueryAttribute.#ctor">
            <summary>
            备份数据查询(按默认查询备份模式)。
            </summary>
        </member>
        <member name="M:Framework.Entity.QueryAttribute.#ctor(Framework.Entity.QueryMode)">
            <summary>
            备份数据查询
            </summary>
            <param name="queryMode">查询备份模式</param>
        </member>
        <member name="T:Framework.Entity.DebugLevel">
            <summary>
            调试级别
            </summary>
        </member>
        <member name="F:Framework.Entity.DebugLevel.None">
            <summary>
            不调试
            </summary>
        </member>
        <member name="F:Framework.Entity.DebugLevel.Normal">
            <summary>
            普通级别
            </summary>
        </member>
        <member name="F:Framework.Entity.DebugLevel.InputParameters">
            <summary>
            只调试输入参数
            </summary>
        </member>
        <member name="F:Framework.Entity.DebugLevel.ReturnParameters">
            <summary>
            只调试输出参数
            </summary>
        </member>
        <member name="F:Framework.Entity.DebugLevel.BothParameters">
            <summary>
            所有输入输出参数明细别
            </summary>
        </member>
        <member name="T:Framework.Entity.DivisionsLevel">
            <summary>
            行政区划级别
            </summary>
        </member>
        <member name="F:Framework.Entity.DivisionsLevel.Country">
            <summary>
            国家、国籍
            </summary>
        </member>
        <member name="F:Framework.Entity.DivisionsLevel.Province">
            <summary>
            省、省份、直辖市、自治区、特别行政区
            </summary>
        </member>
        <member name="F:Framework.Entity.DivisionsLevel.Prefecture">
            <summary>
            市、地区、自治州
            </summary>
        </member>
        <member name="F:Framework.Entity.DivisionsLevel.County">
            <summary>
            县、自治县、县级市、市辖区、旗、自治旗、特区
            </summary>
        </member>
        <member name="F:Framework.Entity.DivisionsLevel.Township">
            <summary>
            乡、镇、民族乡、街道办事处、区公所、苏木
            </summary>
        </member>
        <member name="F:Framework.Entity.DivisionsLevel.Neighborhood">
            <summary>
            村、社区居民委员会、村民委员会、村民小组、行政村、行政村
            </summary>
        </member>
        <member name="T:Framework.Entity.DothingType">
            <summary>
            服务端告知客户端文件的需要处理的方式
            </summary>
        </member>
        <member name="F:Framework.Entity.DothingType.Deleting">
            <summary>
            服务端指示客户端文件需要删除
            </summary>
        </member>
        <member name="F:Framework.Entity.DothingType.Downloading">
            <summary>
            服务端指示客户端文件需要下载
            </summary>
        </member>
        <member name="F:Framework.Entity.DothingType.DoNothing">
            <summary>
            服务端指示客户端文件不需要任何处理
            </summary>
        </member>
        <member name="T:Framework.Entity.Platform">
            <summary>
            平台类型
            </summary>
        </member>
        <member name="F:Framework.Entity.Platform.Unknown">
            <summary>
            未知平台
            </summary>
        </member>
        <member name="F:Framework.Entity.Platform.Winform">
            <summary>
            Windows窗口页面
            </summary>
        </member>
        <member name="F:Framework.Entity.Platform.Webform">
            <summary>
            Web窗口页面
            </summary>
        </member>
        <member name="F:Framework.Entity.Platform.Appform">
            <summary>
            移动应用窗口页面
            </summary>
        </member>
        <member name="T:Framework.Entity.ParameterDataType">
            <summary>
            参数数据类型
            </summary>
        </member>
        <member name="F:Framework.Entity.ParameterDataType.String">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:Framework.Entity.ParameterDataType.Boolean">
            <summary>
            布尔
            </summary>
        </member>
        <member name="F:Framework.Entity.ParameterDataType.DateTime">
            <summary>
            日期/时间
            </summary>
        </member>
        <member name="F:Framework.Entity.ParameterDataType.Integer">
            <summary>
            整数
            </summary>
        </member>
        <member name="F:Framework.Entity.ParameterDataType.Float">
            <summary>
            浮点数
            </summary>
        </member>
        <member name="T:Framework.Entity.ReportPrintMode">
            <summary>
            报表打印模式
            </summary>
        </member>
        <member name="F:Framework.Entity.ReportPrintMode.Default">
            <summary>
            默认的打印模式(由报表管理器设置打印模式)
            </summary>
        </member>
        <member name="F:Framework.Entity.ReportPrintMode.PrintView">
            <summary>
            打印预览(当用户点击取消打印时抛出 AbortException 异常)。
            </summary>
        </member>
        <member name="F:Framework.Entity.ReportPrintMode.DirectPrint">
            <summary>
            直接打印不预览
            </summary>
        </member>
        <member name="F:Framework.Entity.ReportPrintMode.NotPrint">
            <summary>
            不进行打印
            </summary>
        </member>
        <member name="T:Framework.Entity.StatusType">
            <summary>
            文件状态类型
            </summary>
        </member>
        <member name="F:Framework.Entity.StatusType.Opened">
            <summary>
            客户端文件已经被打开的
            </summary>
        </member>
        <member name="F:Framework.Entity.StatusType.Exists">
            <summary>
            客户端文件存在但是并未打开
            </summary>
        </member>
        <member name="F:Framework.Entity.StatusType.Inexistent">
            <summary>
            客户端文件不存在
            </summary>
        </member>
        <member name="T:Framework.Entity.SyncMode">
            <summary>
            同步方式
            </summary>
        </member>
        <member name="F:Framework.Entity.SyncMode.Upload">
            <summary>
            上传
            </summary>
        </member>
        <member name="F:Framework.Entity.SyncMode.Download">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:Framework.Entity.SyncMode.SynchroDifference">
            <summary>
            差异同步
            </summary>
        </member>
        <member name="F:Framework.Entity.SyncMode.SynchroAll">
            <summary>
            完全同步
            </summary>
        </member>
        <member name="T:Framework.Entity.SyncType">
            <summary>
            同步类型
            </summary>
        </member>
        <member name="F:Framework.Entity.SyncType.Copy">
            <summary>
            副本(只同步新增或修改部分数据)
            </summary>
        </member>
        <member name="F:Framework.Entity.SyncType.Move">
            <summary>
            转移(被同步方不保留副本)
            </summary>
        </member>
        <member name="T:Framework.Entity.AuthorizationException">
            <summary>
            授权异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.AuthorizationException.#ctor">
            <summary>
            初始化授权异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.AuthorizationException.#ctor(System.String,System.Object[])">
            <summary>
            初始化授权异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.AuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            初始化授权异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.AuthorizationException.#ctor(System.Exception)">
            <summary>
            初始化授权异常实例。
            </summary>
            <param name="ex">用于实例化异常的异常对象。</param>
        </member>
        <member name="M:Framework.Entity.AuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 AuthenticateException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.BreakException">
            <summary>
            终止、中断正常逻辑流程的空异常。
            </summary>
        </member>
        <member name="P:Framework.Entity.BreakException.ErrorCode">
            <summary>
            获取与此异常关联的错误代码。
            </summary>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor">
            <summary>
            初始化中断异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor(System.String,System.Object[])">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor(System.String,System.Exception)">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor(System.Int32)">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="errorCode">与此异常关联的错误代码</param>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor(System.Int32,System.String,System.Object[])">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
            <param name="errorCode">与此异常关联的错误代码</param>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
            <param name="errorCode">与此异常关联的错误代码</param>
        </member>
        <member name="M:Framework.Entity.BreakException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 BreakException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.ExpireException">
            <summary>
            因过期而失效引发的异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.ExpireException.#ctor">
            <summary>
            实例化过期失效异常
            </summary>
        </member>
        <member name="M:Framework.Entity.ExpireException.#ctor(System.String,System.Object[])">
            <summary>
            因过期而失效引发的异常。
            </summary>
            <param name="message">描述异常内容</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.ExpireException.#ctor(System.String,System.Exception)">
            <summary>
            因过期而失效引发的异常。
            </summary>
            <param name="message">描述异常内容</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.ExpireException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 VersionExpireException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.FrameworkException">
            <summary>
            系统平台架构异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.FrameworkException.#ctor">
            <summary>
            初始化架构异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.FrameworkException.#ctor(System.String,System.Object[])">
            <summary>
            初始化架构异常实例。
            </summary>
            <param name="message">描述架构异常的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.FrameworkException.#ctor(System.String,System.Exception)">
            <summary>
            初始化架构异常实例。
            </summary>
            <param name="message">描述架构异常的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.FrameworkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 FrameworkException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.MaintainingException">
            <summary>
            系统维护挂起的异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.MaintainingException.#ctor">
            <summary>
            系统维护异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.MaintainingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 BreakException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.NetworkException">
            <summary>
            网络连接异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.NetworkException.#ctor">
            <summary>
            初始化网络连接异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.NetworkException.#ctor(System.String,System.Object[])">
            <summary>
            初始化网络连接异常实例。
            </summary>
            <param name="args">格式化的异常消息参数值</param>
            <param name="message">描述网络连接的异常消息。</param>
        </member>
        <member name="M:Framework.Entity.NetworkException.#ctor(System.String,System.Exception)">
            <summary>
            初始化网络连接异常实例。
            </summary>
            <param name="message">描述网络连接的异常消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.NetworkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 NetworkException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.NotFoundException">
            <summary>
            未发现异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.NotFoundException.#ctor">
            <summary>
            初始化未发现异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.NotFoundException.#ctor(System.String,System.Object[])">
            <summary>
            初始化未发现异常实例。
            </summary>
            <param name="message">描述异常的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            初始化未发现异常实例。
            </summary>
            <param name="message">描述异常的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            初始化未发现异常实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.RepeatException">
            <summary>
            重复异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.RepeatException.#ctor">
            <summary>
            初始化重复异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.RepeatException.#ctor(System.String,System.Object[])">
            <summary>
            初始化重复异常实例。
            </summary>
            <param name="message">描述异常的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.RepeatException.#ctor(System.String,System.Exception)">
            <summary>
            初始化重复异常实例。
            </summary>
            <param name="message">描述异常的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.RepeatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            初始化重复异常实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.TokenException">
            <summary>
            因Token未注册或失效引发的异常。
            </summary>
        </member>
        <member name="M:Framework.Entity.TokenException.#ctor">
            <summary>
            实例化Token未注册或失效引发的异常
            </summary>
        </member>
        <member name="M:Framework.Entity.TokenException.#ctor(System.String,System.Object[])">
            <summary>
            实例化Token未注册或失效引发的异常
            </summary>
            <param name="message">描述异常内容</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.TokenException.#ctor(System.String,System.Exception)">
            <summary>
            实例化Token未注册或失效引发的异常
            </summary>
            <param name="message">描述异常内容</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.TokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 TokenException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.WarningException">
            <summary>
            警告异常(作为警告跳出正常逻辑流程使用的异常)。
            </summary>
        </member>
        <member name="P:Framework.Entity.WarningException.ErrorCode">
            <summary>
            获取与此异常关联的错误代码。
            </summary>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor">
            <summary>
            初始化警告异常实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor(System.String,System.Object[])">
            <summary>
            初始化警告异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="args">格式化的异常消息参数值</param>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor(System.String,System.Exception)">
            <summary>
            初始化警告异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor(System.Int32)">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="errorCode">与此异常关联的错误代码</param>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor(System.Int32,System.String)">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="errorCode">与此异常关联的错误代码</param>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            初始化中断异常实例。
            </summary>
            <param name="message">描述警告的消息。</param>
            <param name="innerException">导致当前异常的子异常。</param>
            <param name="errorCode">与此异常关联的错误代码</param>
        </member>
        <member name="M:Framework.Entity.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            用序列化数据初始化 WarningException 类的新实例。
            </summary>
            <param name="info">它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context">它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:Framework.Entity.DictionaryItem">
            <summary>
            系统字典表
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.ROOT">
            <summary>
            顶级字典项值
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.DictID">
            <summary>
            字典项的唯一内码主键(关系表中保存的要关联的字典编号)
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.DictCode">
            <summary>
            字典项编号(用于操作员快速输入，同一字典类型内该编码唯一)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.DictText">
            <summary>
            字典项名称
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.OwnerID">
            <summary>
            字典项归属编码(父编码)
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.Ordinal">
            <summary>
            同级字典项顺序号
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.IsDisabled">
            <summary>
            字典项是否已经停用
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.IsSystemic">
            <summary>
            是否为系统字典项
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.IsDefault">
            <summary>
            是否为默认字典项
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.Spelling">
            <summary>
            字典项助记码(用于操作员快速检索)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DictionaryItem.Remark">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="M:Framework.Entity.DictionaryItem.op_Implicit(Framework.Entity.DictionaryItem)~Framework.Entity.Dictionary">
            <summary />
        </member>
        <member name="M:Framework.Entity.DictionaryItem.op_Implicit(Framework.Entity.Dictionary)~Framework.Entity.DictionaryItem">
            <summary />
        </member>
        <member name="T:Framework.Entity.DistrictItem">
            <summary>
            行政区划数据实体
            </summary>
        </member>
        <member name="F:Framework.Entity.DistrictItem.TopLevel">
            <summary>
            顶级项归属编码
            </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.DistrictsCode">
             <summary>
             区划编码
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.OwnerCode">
             <summary>
             归属区划编码
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.DistrictsText">
             <summary>
             区划名称
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.DistrictsFullText">
             <summary>
             区划全名称
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.Level">
             <summary>
             行政区划级别
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.LevelText">
            <summary>
            行政区划级别名称
            </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.LevelName">
             <summary>
             级别后缀名
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.Ordinal">
             <summary>
             同级别顺序号
             </summary>
        </member>
        <member name="P:Framework.Entity.DistrictItem.Spelling">
             <summary>
             助记码
             </summary>
        </member>
        <member name="M:Framework.Entity.DistrictItem.Create_DivisonTypes(Framework.Entity.DivisionsLevel)">
            <summary>
            创建指定区划级别的区划类别列表(Name表示区划类别名称，Value表示区划类别简称)。
            </summary>
        </member>
        <member name="M:Framework.Entity.DistrictItem.Create_DivisionTable(System.Collections.Generic.List{Framework.Entity.DistrictItem})">
            <summary>
            行政区划列表转换为顺序链结构的数据表(结构:Country,Province,Prefecture,County,Township,Neighborhood,DistrictsCode,OwnerCode,FullText,Levels,Spelling)
            </summary>
            <param name="divison">行政区划列表</param>
        </member>
        <member name="T:Framework.Entity.EmployeeItem">
            <summary>
            员工、职员信息数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.EmployeeCode">
            <summary>
            工作人员编号
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.EmployeeName">
            <summary>
            工作人员名称
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.User">
            <summary>
            登录系统的绑定操作员
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Birthday">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Contact">
            <summary>
            联系方式
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Email">
            <summary>
            电子邮件
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Dept">
            <summary>
            就职部门
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Duty">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Title">
            <summary>
            职称
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.EntryDate">
            <summary>
            入职时间
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.LeaveDate">
            <summary>
            离职时间
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Ordinal">
            <summary>
            显示顺序号
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.EmployeeState">
            <summary>
            工作人员状态内码
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.EmployeeType">
            <summary>
            工作人员类别
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.IsDisabled">
            <summary>
            停用
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.AllowLogin">
            <summary>
            是否允许登录
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Spelling">
            <summary>
            工作人员名称助记码
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Remark">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.Age">
            <summary>
            根据出生日期获取年龄
            </summary>
        </member>
        <member name="P:Framework.Entity.EmployeeItem.AgeText">
            <summary>
            根据出生日期获取年龄表达式
            </summary>
        </member>
        <member name="M:Framework.Entity.EmployeeItem.GetAge(System.DateTime)">
            <summary>
            根据出生日期计算年龄(按足月生日计算)。
            </summary>
            <param name="birthday">出生日期</param>
        </member>
        <member name="M:Framework.Entity.EmployeeItem.GetAgeText(System.DateTime)">
            <summary>
            根据生日获取年龄的描述文本(按足月生日计算年龄)
            </summary>
            <param name="birthday">出生日期</param>
        </member>
        <member name="M:Framework.Entity.EmployeeItem.GetBirthday(System.Decimal)">
            <summary>
            根据年龄推算出生日期。
            </summary>
        </member>
        <member name="T:Framework.Entity.FileItem">
            <summary>
            文件项数据实体
            </summary>
        </member>
        <member name="M:Framework.Entity.FileItem.#ctor">
            <summary>
            实例化文件项数据实体
            </summary>
        </member>
        <member name="M:Framework.Entity.FileItem.#ctor(System.String)">
            <summary>
            由本地文件实例化文件项数据实体
            </summary>
            <param name="fileName">本地文件完全限定名</param>
        </member>
        <member name="M:Framework.Entity.FileItem.#ctor(System.Web.HttpPostedFileBase)">
            <summary>
            实例化文件项数据实体
            </summary>
            <param name="fileData">上传文件数据</param>
        </member>
        <member name="P:Framework.Entity.FileItem.FileCode">
            <summary>
            文件编号
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.Extension">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.Version">
            <summary>
            文件版本
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.ModifyTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.FileContent">
            <summary>
            文件二进制流数据(自动压缩和解压)。
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.HashValue">
            <summary>
            哈希值(文件指纹)
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.ServiceCode">
            <summary>
            文件内容存放的服务集群编号。
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.ReadOnly">
            <summary>
            文件是否只读
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.HasRemanent">
            <summary>
            分段传输时通知接收方是否还有未传完的文件数据。
            </summary>
        </member>
        <member name="P:Framework.Entity.FileItem.FileContentZipped">
            <summary>
            文件二进制流数据(压缩的数据)
            </summary>
        </member>
        <member name="T:Framework.Entity.FormItem">
            <summary>
            窗口实体类
            </summary>
        </member>
        <member name="F:Framework.Entity.FormItem.ROOT">
            <summary>
            根组名称
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.Platform">
            <summary>
            客户端平台类别
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.FormCode">
            <summary>
            窗口编号
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.FormName">
            <summary>
            窗口名称(或页面路径)
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.FormText">
            <summary>
            窗口标题
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.AssemblyName">
            <summary>
            声明窗口的程序集名称
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.Dependency">
            <summary>
            依赖的程序集名称列表
            </summary>
        </member>
        <member name="P:Framework.Entity.FormItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="M:Framework.Entity.FormItem.getIcon">
            <summary>
            获取图标图像
            </summary>
        </member>
        <member name="M:Framework.Entity.FormItem.setIcon(System.Drawing.Image)">
            <summary>
            获取图标图像
            </summary>
        </member>
        <member name="T:Framework.Entity.LanguageItem">
            <summary>
            多语言文本信息数据实体(语言编号、主编码和次编码组合一种语言文本信息)。
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageItem.LanguageID">
            <summary> 
            语言语种编号
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageItem.MajorCode">
            <summary>
            主编码
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageItem.MinorCode">
            <summary>
            次编码
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageItem.Message">
            <summary>
            语言对应文本信息
            </summary>
        </member>
        <member name="P:Framework.Entity.LanguageItem.Spelling">
            <summary>
            文本助记码
            </summary>
        </member>
        <member name="T:Framework.Entity.MenuItem">
            <summary>
            菜单实体类
            </summary>
        </member>
        <member name="F:Framework.Entity.MenuItem.ROOT">
            <summary>
            根菜单归属编号
            </summary>
        </member>
        <member name="F:Framework.Entity.MenuItem.SYSTEMMENU">
            <summary>
            系统菜单文本
            </summary>
        </member>
        <member name="F:Framework.Entity.MenuItem.SeparatorText">
            <summary>
            分割线文本
            </summary>
        </member>
        <member name="P:Framework.Entity.MenuItem.MenuCode">
            <summary>
            菜单编号
            </summary>
        </member>
        <member name="P:Framework.Entity.MenuItem.MenuText">
            <summary>
            菜单文本
            </summary>
        </member>
        <member name="P:Framework.Entity.MenuItem.OwnerCode">
            <summary>
            归属菜单编号
            </summary>
        </member>
        <member name="P:Framework.Entity.MenuItem.RoleCode">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.MenuItem.Ordinal">
            <summary>
            在归属菜单中的列表顺序号
            </summary>
        </member>
        <member name="T:Framework.Entity.ServiceHostItem">
            <summary>
            代理服务器集群实体
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.ServiceCode">
            <summary>
            服务器编号
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.ServiceText">
            <summary>
            服务器自定义名称
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.HostAddress">
            <summary>
            服务主机地址
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.IsReadOnly">
            <summary>
            是否为只读服务
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.IsDisabled">
            <summary>
            服务是否已停用
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.IsAllowLogin">
            <summary>
            是否为客户端登录的服务
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceHostItem.Remark">
            <summary>
            备注描述
            </summary>
        </member>
        <member name="T:Framework.Entity.PurviewItem">
            <summary>
            权限点数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.PurviewCode">
            <summary>
            权限点编号
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.PurviewName">
            <summary>
            权限点名称
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.PurviewText">
            <summary>
            权限点标题
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.AssemblyName">
            <summary>
            权限点归属程序集文件名称
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.FormName">
            <summary>
            权限点归属窗口名称
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.RoleCode">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.MenuCode">
            <summary>
            菜单编号
            </summary>
        </member>
        <member name="P:Framework.Entity.PurviewItem.FormCode">
            <summary>
            窗口编号
            </summary>
        </member>
        <member name="T:Framework.Entity.ReportItem">
            <summary>
            报表数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.ReportCode">
            <summary>
            报表编号
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.ReportName">
            <summary>
            报表名称
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.ReportText">
            <summary>
            报表文件标题
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.ReportXML">
            <summary>
            报表XML文档
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.PrinterName">
            <summary>
            打印报表使用的打印机名称(空表示使用系统默认打印机)
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.PrintMode">
            <summary>
            报表的打印模式(打印、预览、不打印、默认自动)。
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.DataSources">
            <summary>
            报表数据源
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportItem.IsUsed">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:Framework.Entity.ReportParameter">
            <summary>
            报表参数
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportParameter.Name">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportParameter.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportParameter.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Framework.Entity.ReportParameter.Remark">
            <summary>
            参数说明
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameter.#ctor">
            <summary>
            实例化参数数据实体
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameter.#ctor(System.String,System.Object)">
            <summary>
            实例化参数数据实体
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param> 
        </member>
        <member name="M:Framework.Entity.ReportParameter.#ctor(System.String,System.Object,Framework.Entity.ParameterDataType)">
            <summary>
            实例化参数数据实体
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param> 
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:Framework.Entity.ReportParameter.#ctor(System.String,System.Object,Framework.Entity.ParameterDataType,System.String)">
            <summary>
            实例化参数数据实体
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param>
            <param name="dataType">数据类型</param>
            <param name="remark">参数说明</param>
        </member>
        <member name="M:Framework.Entity.ReportParameter.ToDbType">
            <summary>
            获取 .NET Framework 数据提供程序的 Parameter 对象的数据类型。
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameter.ToValue(System.Object)">
            <summary>
            根据参数值的文本表达式解析为参数值
            </summary>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:Framework.Entity.ReportParameter.ToDbParameter">
            <summary>
            将当前参数转换为 System.Data.DataSet 的数据参数。
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameter.op_Implicit(Framework.Entity.ReportParameter)~System.Data.Common.DbParameter">
            <summary>
            将当前参数转换为 System.Data.DataSet 的数据参数。
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameter.ToString">
            <summary>
            获取报表参数的字符串表达式。
            </summary>
        </member>
        <member name="T:Framework.Entity.ReportParameterGroup">
            <summary>
            报表参数组
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.#ctor">
            <summary>
            实例化报表参数组
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.#ctor(Framework.Entity.ReportParameter[])">
            <summary>
            实例化报表参数组数据实体
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.#ctor(System.Data.Common.DbParameter[])">
            <summary>
            实例化报表参数组数据实体
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.#ctor(System.String,System.Object)">
            <summary>
            实例化报表参数组数据实体
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param> 
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.#ctor(System.String,System.Object,Framework.Entity.ParameterDataType)">
            <summary>
            实例化报表参数组数据实体
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param> 
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.#ctor(System.String,System.Object,Framework.Entity.ParameterDataType,System.String)">
            <summary>
            实例化报表参数组数据实体
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param>
            <param name="dataType">数据类型</param>
            <param name="remark">参数说明</param>
        </member>
        <member name="P:Framework.Entity.ReportParameterGroup.Item(System.String)">
            <summary>
            根据参数名称获取报表参数实体。
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.Add(Framework.Entity.ReportParameter[])">
            <summary>
            新增报表参数数组
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.Add(System.Data.Common.DbParameter[])">
            <summary>
            新增数据参数数组
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.Add(System.String,System.Object)">
            <summary>
            新增报表参数
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param> 
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.Add(System.String,System.Object,Framework.Entity.ParameterDataType)">
            <summary>
            新增报表参数
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param> 
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.Add(System.String,System.Object,Framework.Entity.ParameterDataType,System.String)">
            <summary>
            新增报表参数
            </summary>
            <param name="name">参数名称</param>
            <param name="value">参数值</param>
            <param name="dataType">数据类型</param>
            <param name="remark">参数说明</param>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.op_Implicit(Framework.Entity.ReportParameterGroup)~System.Data.Common.DbParameter[]">
            <summary>
            将当前报表参数组隐形转换为数据参数组。
            </summary>
        </member>
        <member name="M:Framework.Entity.ReportParameterGroup.op_Implicit(Framework.Entity.ReportParameterGroup)~Framework.Entity.ReportParameter[]">
            <summary>
            将当前报表参数组隐形转换为报表参数数组。
            </summary>
        </member>
        <member name="T:Framework.Entity.RoleItem">
            <summary>
            角色数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.RoleItem.Platform">
            <summary>
            客户端平台类别
            </summary>
        </member>
        <member name="P:Framework.Entity.RoleItem.RoleCode">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.RoleItem.RoleText">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Framework.Entity.RoleItem.Spelling">
            <summary>
            助记码
            </summary>
        </member>
        <member name="P:Framework.Entity.RoleItem.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Framework.Entity.SeriesConfigItem">
            <summary>
            序列号配置信息实体
            </summary>
        </member>
        <member name="P:Framework.Entity.SeriesConfigItem.SeriesName">
            <summary>
            序列号名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SeriesConfigItem.SeriesType">
            <summary>
            序列号类型
            </summary>
        </member>
        <member name="P:Framework.Entity.SeriesConfigItem.FormatString">
            <summary>
            格式化字符串
            </summary>
        </member>
        <member name="P:Framework.Entity.SeriesConfigItem.Remark">
            <summary>
            备注描述
            </summary>
        </member>
        <member name="T:Framework.Entity.SynchroConfigItem">
            <summary>
            同步配置数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.DbCode">
            <summary>
            同步的目标数据编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.ServiceCode">
            <summary>
            同步时使用的代理服务编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.SyncOrdinal">
            <summary>
            同步新增时的顺序号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.TableName">
            <summary>
            同步的表名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.TableText">
            <summary>
            同步的表标题
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.MajorKeys">
            <summary>
            同步表的主键数组
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.MajorKeysString">
            <summary>
            同步表的主键数组字符串表达式
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.MajorTableName">
            <summary>
            主表名称(用于管理明细表用)
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.DbCodeColumnName">
            <summary>
            同步表的数据库编号列名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.FileCodeColumnName">
            <summary>
            同步表的文件编号列名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.TimeStampColumnName">
            <summary>
            同步表的时间戳列名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.Disabled">
            <summary>
            停用标志
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.SyncMode">
            <summary>
            同步方式(0不处理,1上传,2下载,4同步)
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.SyncType">
            <summary>
            同步类型(0不处理,1增量同步,2覆盖同步,4无副本同步)
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroConfigItem.SyncRule">
            <summary>
            同步规则计算公式
            </summary>
        </member>
        <member name="T:Framework.Entity.SynchroLogItem">
            <summary>
            同步日志数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.LogID">
            <summary>
            同步日志编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.DbCode">
            <summary>
            同步的目标数据编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.ServiceCode">
            <summary>
            同步时使用的代理服务编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.UserID">
            <summary>
            执行同步操作的操作员
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.Beginning">
            <summary>
            同步的开始时间
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.Finished">
            <summary>
            同步的完成时间
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroLogItem.Details">
            <summary>
            同步的日志明细列表
            </summary>
        </member>
        <member name="T:Framework.Entity.SynchroStatusItem">
            <summary>
            同步状态数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroStatusItem.DbCode">
            <summary>
            同步的目标数据编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroStatusItem.ServiceCode">
            <summary>
            同步时使用的代理服务编号
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroStatusItem.TableName">
            <summary>
            同步的表名称
            </summary>
        </member>
        <member name="P:Framework.Entity.SynchroStatusItem.TimeStamp">
            <summary>
            同步的时间戳
            </summary>
        </member>
        <member name="T:Framework.Entity.TimingTaskItem">
            <summary>
            定时任务时间实体
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.Name">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.CallName">
            <summary>
            调用名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.TaskType">
            <summary>
            任务类型
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.TaskStatus">
            <summary>
            任务状态
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.Duration">
            <summary>
            定时时长或时刻
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.WorkDir">
            <summary>
            工作目录
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.EffectTime">
            <summary>
            生效时间
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.ExpiryTime">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.Disabled">
            <summary>
            是否停用(null表示删除配置)
            </summary>
        </member>
        <member name="P:Framework.Entity.TimingTaskItem.Params">
            <summary>
            任务参数
            <para>Pair.Name表示参数名称</para>
            <para>Pair.Value.Name表示参数值</para>
            <para>Pair.Value.Value表示参数描述</para>
            </summary>
        </member>
        <member name="T:Framework.Entity.ToolbarItem">
            <summary>
            工具栏实体类
            </summary>
        </member>
        <member name="P:Framework.Entity.ToolbarItem.ToolBarCode">
            <summary>
            工具栏编号
            </summary>
        </member>
        <member name="P:Framework.Entity.ToolbarItem.ToolBarText">
            <summary>
            工具栏标题文本
            </summary>
        </member>
        <member name="T:Framework.Entity.UserDeptsItem">
            <summary>
            操作员登录的组织机构数据实体类
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.UserID">
            <summary>
            操作员登录ID号码
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.UserName">
            <summary>
            操作员姓名
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.DeptCode">
            <summary>
            组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.DeptText">
            <summary>
            组织机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.DeptType">
            <summary>
            组织机构类型
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.OwnerDeptCode">
            <summary>
            归属组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.OwnerDeptText">
            <summary>
            归属组织机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.RoleCode">
            <summary>
            操作员角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.RoleText">
            <summary>
            操作员角色名称
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.IsDisabled">
            <summary>
            组织机构是否停用
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.Spelling">
            <summary>
            组织机构名称助记码
            </summary>
        </member>
        <member name="P:Framework.Entity.UserDeptsItem.Platform">
            <summary>
            平台类别
            </summary>
        </member>
        <member name="T:Framework.Entity.UserItem">
            <summary>
            操作员信息实体类
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.UserID">
            <summary>
            操作员唯一编号(系统自动生成)。
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.UserCode">
            <summary>
            操作员的登录编号(同一个DbCode内不重复)。
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.UserName">
            <summary>
            操作员登录的用户姓名
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.Password">
            <summary>
            用户密码(32位MD5密文密码)
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.EmployeeCode">
            <summary>
            与操作员关联的员工编号(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.EmployeeName">
            <summary>
            与操作员关联的员工姓名(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.EmployeeType">
            <summary>
            与操作员关联的员工类别(如存在关联只取第一个员工的类别)。
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.Language">
            <summary>
            操作员使用的语种编号
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.Dept">
            <summary>
            组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.DeptType">
            <summary>
            组织机构类型
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.IsDisabled">
            <summary>
            操作员是否被停用
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.IsSystemic">
            <summary>
            是否为系统操作员
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.Token">
            <summary>
            登录令牌
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.Spelling">
            <summary>
            操作员姓名拼音码
            </summary>
        </member>
        <member name="P:Framework.Entity.UserItem.Remark">
            <summary>
            操作员备注，描述。
            </summary>
        </member>
        <member name="M:Framework.Entity.UserItem.CreateCheckStamp">
            <summary>
            创建校验戳
            </summary>
        </member>
        <member name="M:Framework.Entity.UserItem.op_Implicit(Framework.Entity.UserItem)~Framework.Entity.User">
            <summary />
        </member>
        <member name="M:Framework.Entity.UserItem.op_Implicit(Framework.Entity.User)~Framework.Entity.UserItem">
            <summary />
        </member>
        <member name="T:Framework.Entity.DatabaseItem">
            <summary>
            数据库数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.DbCode">
            <summary>
            数据库编号
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.DbText">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.ServiceCode">
            <summary>
            访问数据库时使用的代理服务器编号(参考:ServiceHosts.ServiceCode)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.ServiceText">
            <summary>
            访问数据库时使用的代理服务器名称(参考:ServiceHosts.ServiceText)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.IsDisabled">
            <summary>
            是否停用
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.ConnectionType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="P:Framework.Entity.DatabaseItem.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="T:Framework.Entity.DbColumn">
            <summary>
            数据库字段数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.Name">
            <summary>
            字段限定名
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.OriginalName">
            <summary>
            原字段限定名(修改字段名称时表示修改前的字段限定名,否则为空字符)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.Table">
            <summary>
            字段归属的表实体
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.Ordinal">
            <summary>
            字段顺序
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.DataType">
            <summary>
            数据类型(简洁数据类型,包括长度)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.AllowNull">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.PrimaryKey">
            <summary>
            是否为主键
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.Indexed">
            <summary>
            是否为索引
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumn.Remark">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumn.ToString">
            <summary>
            字符串表达式
            </summary>
        </member>
        <member name="T:Framework.Entity.DbColumnsCollection">
            <summary>
            字段列表
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.Add(Framework.Entity.DbColumn)">
            <summary>
            在字段列表尾部追加新的字段。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.AddRange(System.Collections.Generic.IEnumerable{Framework.Entity.DbColumn})">
            <summary>
            在字段列表尾部追加字段列表。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.IndexOf(Framework.Entity.DbColumn)">
            <summary>
            获取字段在列表中的索引位置。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.Insert(System.Int32,Framework.Entity.DbColumn)">
            <summary>
            在字段列表的指定位置插入新的字段。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            从字段列表中的指定位置移除字段。
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumnsCollection.Item(System.Int32)">
            <summary>
            获取或设置列表中字段索引位置处的字段实体。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.Clear">
            <summary>
            清除字段列表中的所有元素。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.Contains(Framework.Entity.DbColumn)">
            <summary>
            判断字段列表中是否存在指定的字段实体。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.CopyTo(Framework.Entity.DbColumn[],System.Int32)">
            <summary>
            将整个字段列表复制到兼容的一维数组中，从目标数组的指定索引位置开始放置。
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumnsCollection.Count">
            <summary>
            获取字段列表中的元素数。
            </summary>
        </member>
        <member name="P:Framework.Entity.DbColumnsCollection.IsReadOnly">
            <summary>
            字段列表是否为只读。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.Remove(Framework.Entity.DbColumn)">
            <summary>
            从字段列表中移除指定的字段实体。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.GetEnumerator">
            <summary>
            获取字段列表枚举器
            </summary>
        </member>
        <member name="M:Framework.Entity.DbColumnsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取字段列表枚举器
            </summary>
        </member>
        <member name="T:Framework.Entity.DbElement">
            <summary>
            数据元素实体
            </summary>
        </member>
        <member name="M:Framework.Entity.DbElement.#ctor(Framework.Entity.DbELementType)">
            <summary>
            实例化
            </summary>
            <param name="elementType">类型</param>
        </member>
        <member name="M:Framework.Entity.DbElement.#ctor(System.String,System.String)">
            <summary>
            实例化空的无效元素。
            </summary>
            <param name="name">元素名称</param>
            <param name="schema">架构名</param>
        </member>
        <member name="P:Framework.Entity.DbElement.Schema">
            <summary>
            架构名称(默认 dbo)
            </summary>
        </member>
        <member name="P:Framework.Entity.DbElement.ElementType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Framework.Entity.DbElement.Name">
            <summary>
            名称(不包括架构名)
            </summary>
        </member>
        <member name="P:Framework.Entity.DbElement.FullName">
            <summary>
            全称(架构.元素名)
            </summary>
        </member>
        <member name="P:Framework.Entity.DbElement.Remark">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="P:Framework.Entity.DbElement.CreateScript">
            <summary>
            Transact-SQL 创建脚本
            </summary>
        </member>
        <member name="P:Framework.Entity.DbElement.SimplifyScript">
            <summary>
            简化的 Transact-SQL 创建脚本(仅保留有效字符用于脚本相同性比较)。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbElement.ToString">
            <summary>
            字符串表达式
            </summary>
        </member>
        <member name="T:Framework.Entity.DbELementType">
            <summary>
            数据元素类型
            </summary>
        </member>
        <member name="F:Framework.Entity.DbELementType.NONE">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Framework.Entity.DbELementType.TABLE">
            <summary>
            表
            </summary>
        </member>
        <member name="F:Framework.Entity.DbELementType.VIEW">
            <summary>
            视图
            </summary>
        </member>
        <member name="F:Framework.Entity.DbELementType.FUNCTION">
            <summary>
            函数
            </summary>
        </member>
        <member name="F:Framework.Entity.DbELementType.PROCEDURE">
            <summary>
            存储过程
            </summary>
        </member>
        <member name="F:Framework.Entity.DbELementType.TRIGGER">
            <summary>
            触发器
            </summary>
        </member>
        <member name="T:Framework.Entity.DbTable">
            <summary>
            数据库表实体
            </summary>
        </member>
        <member name="M:Framework.Entity.DbTable.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="P:Framework.Entity.DbTable.OriginalName">
            <summary>
            原表限定名(修改表名称时表示修改前的表名称，否则为空字符)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DbTable.Columns">
            <summary>
            字段列表
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer">
            <summary>
            配置管理器
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.#cctor">
            <summary>
            初始化配置管理器
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.Initialize">
            <summary>
            初始化配置
            </summary>
        </member>
        <member name="E:Framework.Entity.Configer.Changed">
            <summary>
            配置内容改变事件
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.IsExists">
            <summary>
            当前工作目录是否存在配置文件。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.IsDebugging">
            <summary>
            开发环境代码调试器是否已连接到进程。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ProductName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ProductAlias">
            <summary>
            产品简称
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DebugLevel">
            <summary>
            调试级别
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.TryPing">
            <summary>
            是否尝试Ping服务器
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.RunAs">
            <summary>
            是否以管理员身份运行
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.Document">
            <summary>
            配置文件(config.xml)的Xml文档。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.Client">
            <summary>
            客户端代理调用配置
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.ClientClass">
            <summary>
            客户端代理调用配置
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.ClientClass.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.ClientClass.DirectlyCall">
            <summary>
            客户端不通过代理直接调用。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ClientClass.MultiEntering">
            <summary>
            客户端多开(默认:单开)。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ClientClass.AutoLogin">
            <summary>
            客户端启动自动登录(用户名,明文密码,组织机构编号)
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ClientClass.HomePage">
            <summary>
            客户端首页(程序集名称.页名称)
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ClientClass.ServiceHost">
            <summary>
            数据服务器主机地址
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ClientClass.EarlyStartups">
            <summary>
            预启动程序列表(必须实现IEarlyStartup接口的程序，格式[程序集名.类名])。
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.AutoLoginClass">
            <summary>
            自动登录配置参数
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.#ctor(System.String,System.String,System.String)">
            <summary>
            自动登录配置参数
            </summary>
            <param name="loginId">自动登录用户名</param>
            <param name="password">自动登录密码(明文)</param>
            <param name="deptCode">自动登录机构编号</param>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.#ctor(System.String)">
            <summary>
            自动登录配置参数
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.AutoLoginClass.LoginID">
            <summary>
            自动登录用户名
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.AutoLoginClass.Password">
            <summary>
            自动登录密码(明文)
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.AutoLoginClass.DeptCode">
            <summary>
            自动登录机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.AutoLoginClass.IsEmpty">
            <summary>
            是否未配置自动登录参数
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.op_Equality(Framework.Entity.Configer.AutoLoginClass,Framework.Entity.Configer.AutoLoginClass)">
            <summary>
            比较两个 AutoLoginClass 的值是否相同。
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.op_Inequality(Framework.Entity.Configer.AutoLoginClass,Framework.Entity.Configer.AutoLoginClass)">
            <summary>
            比较两个 AutoLoginClass 的值是否不相同。
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.Equals(System.Object)">
            <summary>
            返回此实例是否等于另外一个对象实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.GetHashCode">
            <summary>
            返回此实例的哈希代码。
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.AutoLoginClass.ToString">
            <summary>
            字符串表达式
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.Service">
            <summary>
            代理服务器配置
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.ServiceClass">
            <summary>
            代理服务器配置
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.ServiceClass.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.HostAddress">
            <summary>
            服务主机地址
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.LoginCheckMaxTimes">
            <summary>
            登录验证每分钟尝试最大次数
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.OfflineVersion">
            <summary>
            版本脱机管理(以服务端程序集文件的版本为依据)
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.Routing">
            <summary>
            如服务为前置服务器时，请设置路由转发服务器主机地址
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.BackupQuery">
            <summary>
            备份查询代理配置
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.DataBase">
            <summary>
            代理服务数据库配置
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.ServiceClass.FileService">
            <summary>
            文件服务配置
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.DataBaseClass">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.DataBaseClass.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.NonEip">
            <summary>
            非企业总线数据架构。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.IsEmpty">
            <summary>
            数据库配置是否为空。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.Provider">
            <summary>
            数据库驱动类型，数据库连接类型(缺省表示 OleDbConnection)。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.ParamChar">
            <summary>
            参数界定字符
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.Schema">
            <summary>
            框架表的架构名称(缺省:eip)
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.Source">
            <summary>
            数据源(服务器名称或地址)
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.Base">
            <summary>
            数据库
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.UserID">
            <summary>
            数据库登录用户
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.Password">
            <summary>
            数据库登录密码
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.DataBaseClass.Timeout">
            <summary>
            数据库连接超时时间(秒钟)
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.BackupQueryClass">
            <summary>
            备份查询配置
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.BackupQueryClass.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.BackupQueryClass.Mode">
            <summary>
            备份查询模式
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.BackupQueryClass.ServiceHost">
            <summary>
            备份查询服务主机地址。
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.RoutingClass">
            <summary>
            路由转发服务配置
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.RoutingClass.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.RoutingClass.IsRequired">
            <summary>
            当然默认服务是否要求作为路由代理进行数据转发。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.RoutingClass.ServiceHost">
            <summary>
            备份查询服务主机地址。
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.FileServiceClass">
            <summary>
            文件服务配置
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.FileServiceClass.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.FileServiceClass.IsRequireLocalFile">
            <summary>
            流数据持久化形式
            <para>true:流数据在服务端以文件形式落地</para>
            <para>false:流数据在数据库中持久化</para>
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.FileServiceClass.LocalDir">
            <summary>
            流数据在服务端落地的文件目录(缺省由系统自己决定文件目录).
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.CanInitializeManageBase">
            <summary>
            可以初始化的配置管理基类
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CanInitializeManageBase.Node">
            <summary>
            配置管理的Xml文档节点对象
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.CanInitializeManageBase.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.Cookies">
            <summary>
            Cookies管理(不触发 Changed 事件)。
            </summary>
        </member>
        <member name="T:Framework.Entity.Configer.CookiesCollectoin">
            <summary>
            临存信息集合
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.CookiesCollectoin.Initialize(App.FunctionLibrary.XmlNode,System.Func{App.FunctionLibrary.XmlNode})">
            <summary />
        </member>
        <member name="P:Framework.Entity.Configer.CookiesCollectoin.ShadowFile">
            <summary>
            Cookies的内容是否生成到影像文件中
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CookiesCollectoin.Item(System.String)">
            <summary>
            获取Cookie项或者设置Cookie值。
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CookiesCollectoin.Item(System.String,System.String)">
            <summary>
            根据Cookie名称获取Cookie值。
            </summary>
            <param name="name">Cookie名称</param>
            <param name="defaults">默认值</param>
        </member>
        <member name="T:Framework.Entity.Configer.CookieItem">
            <summary>
            临存信息配置项
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CookieItem.Name">
            <summary>
            Cookie节点名称
            </summary>
        </member>
        <member name="F:Framework.Entity.Configer.CookieItem.nameslink">
            <summary>
            节点命名链
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CookieItem.Item(System.String)">
            <summary>
            属性值
            </summary>
            <param name="name">属性名称</param>
        </member>
        <member name="P:Framework.Entity.Configer.CookieItem.Item(System.String,System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="default">属性默认值</param>
        </member>
        <member name="P:Framework.Entity.Configer.CookieItem.Value">
            <summary>
            临存信息值
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.CookieItem.Values(System.String)">
            <summary>
            获取默认值的Cookie值
            </summary>
            <param name="default">如果值为空时的默认值</param>
        </member>
        <member name="M:Framework.Entity.Configer.CookieItem.Remove">
            <summary>
            移除配置项
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CookieItem.EmptyNamePutValue">
            <summary>
            空名赋值
            </summary>
        </member>
        <member name="P:Framework.Entity.Configer.CookieItem.shadowFile">
            <summary>
            获取影像文件
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.CookieItem.op_Implicit(System.String)~Framework.Entity.Configer.CookieItem">
            <summary>
            Cookie值默认转换为无名称Cookie项。
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.CookieItem.op_Implicit(Framework.Entity.Configer.CookieItem)~System.String">
            <summary>
            Cookie项默认转换为Cookie值。
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.Save">
            <summary>
            保存配置文件
            </summary>
        </member>
        <member name="M:Framework.Entity.Configer.Find(System.String[])">
            <summary>
            在配置Xml文档中查找符合名称组条件的第一个子节点(忽略大小写)。
            </summary>
            <param name="names">搜索的子节点名称组(忽略大小写,忽略根节点)</param>
        </member>
        <member name="M:Framework.Entity.Configer.FindAll(System.String[])">
            <summary>
            在配置Xml文档中查找所有符合名称组条件的子节点(忽略大小写)。
            </summary>
            <param name="names">搜索的子节点名称组(忽略大小写,忽略根节点)</param>
        </member>
        <member name="M:Framework.Entity.Configer.FindCreate(System.String[])">
            <summary>
            在配置Xml文档中查找符合名称组条件的第一个子节点,如果未找到子节点时则自动创建该节点(忽略大小写)。
            </summary>
            <param name="names">搜索的子节点名称组(忽略大小写,忽略根节点)</param>
        </member>
        <member name="T:Framework.Entity.Extension">
            <summary>
            系统全局变量
            </summary>
        </member>
        <member name="P:Framework.Entity.Extension.ProductName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Framework.Entity.Extension.IsNetworkAvailable">
            <summary>
            该值指示网络是否可供应用程序使用
            </summary>
        </member>
        <member name="F:Framework.Entity.Extension.SystemAssemblies">
            <summary>
            获取系统程序集(系统运行必须的程序集,不包括扩展名)。
            </summary>
        </member>
        <member name="M:Framework.Entity.Extension.GetReferenceAssemblies(System.Reflection.Assembly)">
            <summary>
            获取引用的程序集(未找到的依赖程序集将抛出异常 DllNotFoundException)。
            </summary>
        </member>
        <member name="P:Framework.Entity.Extension.FileCacheDirName">
            <summary>
            文件缓存的目录名称
            </summary>
        </member>
        <member name="P:Framework.Entity.Extension.FileDataDirName">
            <summary>
            文件数据的目录名称
            </summary>
        </member>
        <member name="M:Framework.Entity.Extension.Serialize(System.Object,Framework.Entity.SerializeType,Framework.Entity.ControlParameter)">
            <summary>
            由实例对象封箱为串行化字符串。
            </summary>
            <param name="ctrl">控制参数的串行化字符串。</param>
            <param name="obj">需要封箱串行化的实例对象。</param>
            <param name="serializeType">参数序列化方式(0-Binary,1-Xml,2-Json,3-Soap,4-Simple)。</param>
        </member>
        <member name="M:Framework.Entity.Extension.Deserialize(System.String,Framework.Entity.SerializeType,Framework.Entity.ControlParameter)">
            <summary>
            对对象进行反序列化(强命名的序列化类型)。
            </summary>
            <param name="ctrl">控制参数的串行化字符串。</param>
            <param name="serialized">强命名类型的序列化对象实例字符串表达式。</param>
            <param name="serializeType">反序列化方式</param>
        </member>
        <member name="M:Framework.Entity.Extension.Deserialize``1(System.String,Framework.Entity.SerializeType,Framework.Entity.ControlParameter)">
            <summary>
            对对象进行反序列化。
            </summary>
            <typeparam name="T">匿名命名类型的反序列化对象实例泛型类型</typeparam>
            <param name="serialized">序列化的对象实例字符串表达式。</param>
            <param name="ctrl">控制参数的串行化字符串。</param>
            <param name="serializeType">反序列化方式</param>
        </member>
        <member name="M:Framework.Entity.Extension.GetSerializer(Framework.Entity.SerializeType)">
            <summary>
            根据序列化类型获取序列化生成器(强命名类型的序列化生成器)。
            </summary>
        </member>
        <member name="T:Framework.Entity.TerminalItem">
            <summary>
            终端信息
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.ROOT">
            <summary>
            父分组根
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.TerminalCode">
            <summary>
            终端编号
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.TerminalName">
            <summary>
            终端名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.FriendlyName">
            <summary>
            终端昵称
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.MacAddress">
            <summary>
            终端网卡MAC地址
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.IpAddress">
            <summary>
            终端网络通讯IP地址
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.IsAccredited">
            <summary>
            是否授权
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.IsSystemic">
            <summary>
            是否为系统终端
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.DriveSerials">
            <summary>
            硬盘序列号
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.CPUSerials">
            <summary>
            CPU序列号
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.OperationSystem">
            <summary>
            操作系统及版本
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginUserID">
            <summary>
            登录的操作员内码
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginUserCode">
            <summary>
            登录操作员编号
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginUserName">
            <summary>
            登录操作员名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginDeptCode">
            <summary>
            登录的组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginDeptText">
            <summary>
            登录的组织机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginRoleCode">
            <summary>
            登录的角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginRoleText">
            <summary>
            登录的角色名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LoginDate">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.LogoutDate">
            <summary>
            登出时间
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.Online">
            <summary>
            操作员是否在线
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.GroupName">
            <summary>
            工作站分组
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.OwnerGroupName">
            <summary>
            父分组名称
            </summary>
        </member>
        <member name="P:Framework.Entity.TerminalItem.Ordinal">
            <summary>
            分钟顺序号
            </summary>
        </member>
        <member name="T:Framework.Entity.TimeStamp">
            <summary>
            精度到微秒的20位时间戳表达对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.#ctor">
            <summary>
            初始化时间戳
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.#ctor(System.DateTime)">
            <summary>
            由时间对象初始化时间戳
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.#ctor(System.Int64)">
            <summary>
            以计时周期数初始化时间戳
            </summary>
            <param name="ticks">以 100 纳秒为单位表示的日期和时间。</param>
        </member>
        <member name="M:Framework.Entity.TimeStamp.#ctor(System.String)">
            <summary>
            由时间戳字符串表达式初始化时间戳
            </summary>
            <param name="timestamp">符合20位精度到微秒的20位时间序列字符串</param>
        </member>
        <member name="P:Framework.Entity.TimeStamp.DateTime">
            <summary>
            时间戳转换为日期对象实例
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Ticks">
            <summary>
            时间戳转换为等值的日期和时间的计时周期数(以 100 纳秒为单位表示的日期和时间)。
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Year">
            <summary>
            时间戳的年底值
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Month">
            <summary>
            时间戳的月份值
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Day">
            <summary>
            时间戳表示月份中的第几天
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Hour">
            <summary>
            时间戳表示的小时数
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Minute">
            <summary>
            时间戳表示的分钟值
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Second">
            <summary>
            时间戳表示的秒钟值
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Millisecond">
            <summary>
            时间戳表示的毫秒值(千分秒)
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Microsecond">
            <summary>
            时间戳表示的微秒值(千分毫秒，百万分秒)
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.IsEmpty">
            <summary>
            判断当前时间戳是否为空戳。
            </summary>
        </member>
        <member name="P:Framework.Entity.TimeStamp.Empty">
            <summary>
            获取一个空的时间戳。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.Copy">
            <summary>
            时间戳的精确副本
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.ToString">
            <summary>
            时间戳的字符串表达式。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Implicit(Framework.Entity.TimeStamp)~System.String">
            <summary>
            时间戳隐形转换为字符串表达式
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Implicit(Framework.Entity.TimeStamp)~System.DateTime">
            <summary>
            时间戳隐形转换为日期对象实例
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Implicit(System.DateTime)~Framework.Entity.TimeStamp">
            <summary>
            日期对象隐形转换为时间戳
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Implicit(System.String)~Framework.Entity.TimeStamp">
            <summary>
            时间戳字符串表达式隐形转换为时间戳
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Implicit(Framework.Entity.TimeStamp)~System.Int64">
            <summary>
            由时间戳转换为等值的计时周期数(以 100 纳秒为单位表示的日期和时间)。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Implicit(System.Int64)~Framework.Entity.TimeStamp">
            <summary>
            由等值的日期和时间计时周期数转换为时间戳。
            </summary>
            <param name="ticks">计时周期数(以 100 纳秒为单位表示的日期和时间)></param>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Equality(Framework.Entity.TimeStamp,Framework.Entity.TimeStamp)">
            <summary>
            确定两个时间戳是否相等
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_Inequality(Framework.Entity.TimeStamp,Framework.Entity.TimeStamp)">
            <summary>
            确定两个时间戳是否不相等
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_LessThan(Framework.Entity.TimeStamp,Framework.Entity.TimeStamp)">
            <summary>
            确定指定的第一个 TimeStamp 对象是否小于指定的第二个 TimeStamp 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_LessThanOrEqual(Framework.Entity.TimeStamp,Framework.Entity.TimeStamp)">
            <summary>
            确定指定的第一个 TimeStamp 对象是否小于或等于第二个 TimeStamp 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_GreaterThan(Framework.Entity.TimeStamp,Framework.Entity.TimeStamp)">
            <summary>
            确定指定的第一个 TimeStamp 对象是否大于指定的第二个 TimeStamp 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.op_GreaterThanOrEqual(Framework.Entity.TimeStamp,Framework.Entity.TimeStamp)">
            <summary>
            确定指定的第一个 TimeStamp 对象是否大于等于指定的第二个 TimeStamp 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.Clone">
            <summary>
            返回当前时间戳的精确副本
            </summary>
        </member>
        <member name="M:Framework.Entity.TimeStamp.CompareTo(Framework.Entity.TimeStamp)">
            <summary>
            将当前 TimeStamp 对象与指定的 TimeStamp 对象进行比较，并返回二者相对值的一个指示。
            </summary>
            <param name="value">要比较的对象，或为 null。</param>
            <returns>
            <para>一个有符号整数，它指示两个对象的相对值，如下表所示。</para>
            <para>小于零:当前的 TimeStamp 对象是 value 之前的一个版本。</para>
            <para>零:当前的 TimeStamp 对象是与 value 相同的版本。</para>
            <para>大于零:当前 TimeStamp 对象是 value 之后的一个版本,或 value 为 null。</para>
            </returns>
        </member>
        <member name="M:Framework.Entity.TimeStamp.CompareTo(System.Object)">
            <summary>
            将当前 TimeStamp 对象与指定的 TimeStamp 对象进行比较，并返回二者相对值的一个指示。
            </summary>
            <param name="obj">要比较的对象，或为 null。</param>
            <returns>
            <para>一个有符号整数，它指示两个对象的相对值，如下表所示。</para>
            <para>小于零:当前的 TimeStamp 对象是 value 之前的一个版本。</para>
            <para>零:当前的 TimeStamp 对象是与 value 相同的版本。</para>
            <para>大于零:当前 TimeStamp 对象是 value 之后的一个版本,或 value 为 null。</para>
            </returns>
        </member>
        <member name="M:Framework.Entity.TimeStamp.Equals(System.Object)">
            <summary>
            返回一个值，该值指示当前 TimeStamp 对象和指定的 TimeStamp 对象是否表示同一个值。
            </summary>
            <param name="obj">要与当前 TimeStamp 对象进行比较的对象，或者为 null。</param>
        </member>
        <member name="M:Framework.Entity.TimeStamp.Equals(Framework.Entity.TimeStamp)">
            <summary>
            返回一个值，该值指示当前 TimeStamp 对象和指定的 TimeStamp 对象是否表示同一个值。
            </summary>
            <param name="obj">要与当前 TimeStamp 对象进行比较的对象，或者为 null。</param>
        </member>
        <member name="M:Framework.Entity.TimeStamp.GetHashCode">
            <summary>
            返回当前 TimeStamp 对象的哈希代码。
            </summary>
        </member>
        <member name="T:Framework.Entity.DataPage`1">
            <summary>
            数据分页查询结果
            </summary>
        </member>
        <member name="F:Framework.Entity.DataPage`1.pageData">
            <summary>
            当前分页结果数据列表
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.#ctor">
            <summary>
            实例化数据分页查询结果
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.#ctor(System.Int32,System.Int32,System.Int64,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            实例化数据分页查询结果
            </summary>
            <param name="index">当前页索引(从1开始的页次)</param>
            <param name="size">分页大小</param>
            <param name="count">查询数据的总记录数。</param>
            <param name="items">当前分页结果数据列表</param>
        </member>
        <member name="P:Framework.Entity.DataPage`1.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Framework.Entity.DataPage`1.PageIndex">
            <summary>
            当前页索引(从1开始的页次)
            </summary>
        </member>
        <member name="P:Framework.Entity.DataPage`1.RowCount">
            <summary>
            查询数据的总记录数。
            </summary>
        </member>
        <member name="P:Framework.Entity.DataPage`1.PageCount">
            <summary>
            分页的总页数
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            分页中新增数据项
            </summary>
            <param name="items">当前分页结果数据列表</param>
        </member>
        <member name="M:Framework.Entity.DataPage`1.op_Implicit(Framework.Entity.DataPage{`0})~System.Collections.Generic.List{`0}">
            <summary>
            分页数据输出为记录数据列表
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.op_Implicit(Framework.Entity.DataPage{`0})~`0[]">
            <summary>
            分页数据输出为记录数据数组
            </summary>
        </member>
        <member name="P:Framework.Entity.DataPage`1.Count">
            <summary>
            当前分页结果中记录数
            </summary>
        </member>
        <member name="P:Framework.Entity.DataPage`1.IsReadOnly">
            <summary>
            分页结果是否只读
            </summary>
        </member>
        <member name="P:Framework.Entity.DataPage`1.Item(System.Int32)">
            <summary>
            获取索引处的数据
            </summary>
            <param name="index">从零开始的索引</param>
        </member>
        <member name="M:Framework.Entity.DataPage`1.IndexOf(`0)">
            <summary>
            数据在分页记录中的索引位置(从0开始的索引)。
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.GetEnumerator">
            <summary>
            获取分页数据的枚举器
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取分页数据的枚举器
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.Insert(System.Int32,`0)">
            <summary>
            分页中插入新数据项
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.RemoveAt(System.Int32)">
            <summary>
            分页中移除指定索引的数据项
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.Add(`0)">
            <summary>
            分页中新增数据项
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.Clear">
            <summary>
            清理分页中的所有数据项
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.Contains(`0)">
            <summary>
            判断分页中是否包含指定的数据项
            </summary>
        </member>
        <member name="M:Framework.Entity.DataPage`1.CopyTo(`0[],System.Int32)">
            <summary>
            将分页中的数据项复制到一维数组中。
            </summary>
            <param name="array">复制数据项的目标数组</param>
            <param name="arrayIndex">中从零开始的索引，将在此处开始复制。</param>
        </member>
        <member name="M:Framework.Entity.DataPage`1.Remove(`0)">
            <summary>
            从分页中移除指定的数据项
            </summary>
        </member>
        <member name="T:Framework.Entity.ControlParameter">
            <summary>
            数据传输控制参数。
            </summary>
        </member>
        <member name="P:Framework.Entity.ControlParameter.Compress">
            <summary>
            对输入、输出参数进行压缩传输。
            </summary>
        </member>
        <member name="P:Framework.Entity.ControlParameter.Encrypt">
            <summary>
            对输入、输出参数进行加密。
            </summary>
        </member>
        <member name="T:Framework.Entity.IFrameworkConfig">
            <summary>
            系统配置接口
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.Item(System.String)">
            <summary>
            获取系统配置值
            </summary>
            <param name="code">配置编号</param>
            <returns>成功返回获取的系统配置值，失败返回空字符串。</returns> 
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.Item(System.String,System.String)">
            <summary>
            获取数据系统配置值
            </summary>
            <param name="code">配置编号</param>
            <param name="default">缺省值</param>
            <returns>成功返回获取的系统配置值，失败返回空字符串。</returns> 
        </member>
        <member name="M:Framework.Entity.IFrameworkConfig.GetValue``1(System.String)">
            <summary>
            获取系统配置值
            </summary>
            <typeparam name="T">参数值的泛型类型</typeparam>
            <param name="code">配置编号</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkConfig.GetValue``1(System.String,``0)">
            <summary>
            获取系统配置值
            </summary>
            <param name="code">配置编号</param>
            <param name="default">缺省值</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkConfig.GetValue(System.String)">
            <summary>
            获取系统配置值
            </summary>
            <param name="code">配置编号</param>
            <returns>成功返回获取的系统配置值，失败返回空字符串。</returns> 
        </member>
        <member name="M:Framework.Entity.IFrameworkConfig.GetValue(System.String,System.String)">
            <summary>
            获取系统配置值
            </summary>
            <param name="code">配置编号</param>
            <param name="default">缺省值</param>
            <returns>成功返回获取的系统配置值，失败返回空字符串。</returns>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.DbCode">
            <summary>
            系统数据编号。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.DefaultLanguage">
            <summary>
            默认语言编号。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.Version">
            <summary>
            系统版本号。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.ProductName">
            <summary>
            产品名称。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.ProductAlias">
            <summary>
            产品简称
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.CompanyName">
            <summary>
            开发商名称。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.CompanyAlias">
            <summary>
            开发商简称。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.CompanyAddress">
            <summary>
            开发商通讯地址。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.CompanyHttp">
            <summary>
            开发商网站地址。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.CompanyContact">
            <summary>
            开发商联系方式。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.CompanyEmail">
            <summary>
            开发商电子邮件。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.ClientName">
            <summary>
            授权使用客户名称
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.ClientAlias">
            <summary>
            授权使用客户简称。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkConfig.ClientAddress">
            <summary>
            授权使用客户通讯地址。
            </summary>
        </member>
        <member name="T:Framework.Entity.IFrameworkCookies">
            <summary>
            系统缓存接口
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkCookies.Item(System.String)">
            <summary>
            获取或者设置系统全局缓存信息。
            </summary>
            <param name="name">缓存名称</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkCookies.Item(System.String,System.String)">
            <summary>
            获取系统全局缓存信息。
            </summary>
            <param name="name">缓存名称</param>
            <param name="defaultValue">缓存默认值</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkCookies.GetValue``1(System.String)">
            <summary>
            获取缓存信息。
            </summary>
            <typeparam name="T">缓存值的泛型类型。</typeparam>
            <param name="name">缓存名称</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkCookies.GetValue``1(System.String,``0)">
            <summary>
            获取缓存信息。
            </summary>
            <typeparam name="T">缓存值的泛型类型。</typeparam>
            <param name="name">缓存名称</param>
            <param name="defaultValue">缓存默认值</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkCookies.User">
            <summary>
            操作员缓存信息
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkCookies.Terminal">
            <summary>
            计算机缓存信息
            </summary>
        </member>
        <member name="T:Framework.Entity.IFrameworkCookiesIndexer">
            <summary>
            系统缓存索引器接口
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkCookiesIndexer.Item(System.String)">
            <summary>
            获取或者设置缓存信息。
            </summary>
            <param name="name">缓存名称</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkCookiesIndexer.Item(System.String,System.String)">
            <summary>
            获取缓存信息。
            </summary>
            <param name="name">缓存名称</param>
            <param name="defaultValue">缓存默认值</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkCookiesIndexer.GetValue``1(System.String)">
            <summary>
            获取缓存信息。
            </summary>
            <typeparam name="T">缓存值的泛型类型。</typeparam>
            <param name="name">缓存名称</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkCookiesIndexer.GetValue``1(System.String,``0)">
            <summary>
            获取缓存信息。
            </summary>
            <typeparam name="T">缓存值的泛型类型。</typeparam>
            <param name="name">缓存名称</param>
            <param name="defaultValue">缓存默认值</param>
        </member>
        <member name="T:Framework.Entity.IFrameworkDictionary">
            <summary>
            系统字典接口
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String,System.String)">
            <summary>
            字典项
            </summary>
            <param name="ownerCode">字典归属编号</param>
            <param name="dictCode">字典编号</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String,System.Enum)">
            <summary>
            字典项
            </summary>
            <param name="ownerCode">字典归属编号</param>
            <param name="enum">字典枚举值(按MapCode映射的编码取值，如未做编码映射时按枚举值取编码值)。</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String)">
            <summary>
            字典项
            </summary>
            <param name="dictId">字典项唯一内码</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String,System.Boolean)">
            <summary>
            根据归属编号获取字典项列表
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="onlyValid">true表示仅未停用字典，false表示全部字典</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String,System.String[])">
            <summary>
            根据归属编号和字典编号获取字典列表。
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="dictCodes">字典编号数组</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String,System.Enum[])">
            <summary>
            获取字典列表
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="enums">字典枚举(依次按MapCode映射编码值、枚举值、枚举定义名称的顺序进行获取字段项)。</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkDictionary.Item(System.String[])">
            <summary>
            根据字典内码获取字典列表。
            </summary>
            <param name="dictIds">字典内码列表</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_DictID(System.String,System.String)">
            <summary>
            由字典项的归属编码和字典编码获取字典项内码。
            </summary>
            <param name="ownerCode">归属编码</param>
            <param name="dictCode">字典项编码</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_DictID(System.String,System.Enum)">
            <summary>
            由字典项的归属编码和字典项枚举获取字典项内码。
            </summary>
            <param name="ownerCode">字典归属编号</param>
            <param name="enum">字典枚举值(按MapCode映射的编码取值，如未做编码映射时按枚举值取编码值)。</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dict(System.String)">
            <summary>
            字典内码获取字典项
            </summary>
            <param name="dictId">字典项的唯一内码。</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dict(System.String,System.String)">
            <summary>
            根据指定归属编号获取字典项
            </summary>
            <param name="ownerCode">字典归属编号</param>
            <param name="dictCode">字典编码</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dict(System.String,System.Enum)">
            <summary>
            获取字典项
            </summary>
            <param name="ownerCode">字典归属编号</param>
            <param name="enum">字典枚举值(按MapCode映射的编码取值，如未做编码映射时按枚举值取编码值)。</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_RootDict(System.String)">
            <summary>
            获取顶级字典项
            </summary>
            <param name="dictCode">顶级字典项编码</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_DefaultDict(System.String)">
            <summary>
            获取默认字典项.
            </summary>
            <param name="ownerCode">字典项归属编号</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dicts(System.String[])">
            <summary>
            根据字典内码获取字典列表。
            </summary>
            <param name="dictIds">字典内码列表</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dicts(System.String,System.Boolean)">
            <summary>
            根据归属编号获取字典项列表
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="onlyValid">true表示仅未停用字典，false表示全部字典</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dicts(System.String,System.String[])">
            <summary>
            根据归属编号和字典编号获取字典列表。
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="dictCodes">字典编号数组</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_Dicts(System.String,System.Enum[])">
            <summary>
            获取字典列表
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="enums">字典枚举(依次按MapCode映射编码值、枚举值、枚举定义名称的顺序进行获取字段项)。</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_DictPackage(System.String[])">
            <summary>
            根据归属编号获取字典项列表包(不包括停用字典)。
            </summary>
            <param name="ownerCodes">字典项归属编号参数组</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkDictionary.Get_DictFamily(System.String,System.Boolean)">
            <summary>
            根据归属编号获取所有字典家族列表(包括停用字典)。
            </summary>
            <param name="ownerCode">归属编号</param>
            <param name="allJunior">true表示家族内的所有晚辈字典,false表示仅当前子代的字典。</param>
        </member>
        <member name="T:Framework.Entity.IFrameworkEnviron">
            <summary>
            框架环境接口
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.TimeStamp">
            <summary>
            时间戳(精度到微秒的20位时间序列字符串，理论上该值非唯一)。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.SlowTime">
            <summary>
            标准时间、服务器数据库时间
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.WorkDir">
            <summary>
            应用程序路径(当前系统的运行路径或工作路径)
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.TempDir">
            <summary>
            应用程序临时路径
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.TempFile">
            <summary>
            创建临时目录下唯一命名的零字节临时文件。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.TerminalCode">
            <summary>
            注册的终端编号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.TerminalName">
            <summary>
            注册的终端名称
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.MacAddress">
            <summary>
            注册的终端网卡MAC地址
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.IpAddress">
            <summary>
            注册的终端网络通讯IP地址
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.DriveSerials">
            <summary>
            注册的终端硬盘序列号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.CPUSerials">
            <summary>
            注册的终端CPU序列号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.OperationSystem">
            <summary>
            注册的终端操作系统及版本
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.DbCode">
            <summary>
            登录的数据编号(调用方数据编号)。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.UserID">
            <summary>
            登录操作员的唯一ID号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.UserCode">
            <summary>
            操作员登录名
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.UserName">
            <summary>
            操作员登录的用户姓名
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Password">
            <summary>
            操作员登录的密码(32位MD5密文密码)
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.EmployeeCode">
            <summary>
            与操作员关联的员工编号(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.EmployeeName">
            <summary>
            与操作员关联的员工姓名(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.EmployeeType">
            <summary>
            与操作员关联的员工类别(如存在关联只取第一个员工的类别)。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Language">
            <summary>
            操作员使用的语种
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.RoleCode">
            <summary>
            登录操作员的角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.RoleText">
            <summary>
            操作员登录的角色名称
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.DeptCode">
            <summary>
            操作员登录的组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.DeptText">
            <summary>
            操作员登录的组织机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.DeptType">
            <summary>
            操作员登录的组织机构类别
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Config">
            <summary>
            系统基础配置信息
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Dictionary">
            <summary>
            字典管理器
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Serials">
            <summary>
            序列号管理器
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Cookies">
            <summary>
            系统临存信息
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.IsDebugging">
            <summary>
            开发环境代码调试器是否已连接到进程。
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Token">
            <summary>
            登录令牌
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.UsbKey">
            <summary>
            数字证书
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Version">
            <summary>
            系统版本号
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkEnviron.Platform">
            <summary>
            登录的客户端平台类别
            </summary>
        </member>
        <member name="T:Framework.Entity.IFrameworkSeries">
            <summary>
            序列号接口
            </summary>
        </member>
        <member name="P:Framework.Entity.IFrameworkSeries.Item(System.String)">
            <summary>
            获取序列号
            </summary>
            <param name="seriesName">序列号名称</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkSeries.Item(System.String,System.Int32)">
            <summary>
            获取批量序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="count">序列号值的数量</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkSeries.Item(System.String,System.String)">
            <summary>
            获取序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="subName">序列号子名称</param>
        </member>
        <member name="P:Framework.Entity.IFrameworkSeries.Item(System.String,System.String,System.Int32)">
            <summary>
            获取批量序列号。
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="count">序列号值的数量</param>
            <param name="subName">序列号子名称</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.GetSeries(System.String)">
            <summary>
            获取序列号
            </summary>
            <param name="seriesName">序列号名称</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.GetSeries(System.String,System.Int32)">
            <summary>
            获取序列号组
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="count">获取的序列号数目</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.GetSeries(System.String,System.String)">
            <summary>
            获取序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="subName">序列号子名称</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.GetSeries(System.String,System.String,System.Int32)">
            <summary>
            获取序列号组
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="count">获取的序列号数目</param>
            <param name="subName">序列号子名称</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.GetUniqueSeries(System.Int32)">
            <summary>
            获取全系统绝对唯一的序列号(类似于GUID，但不同于GUID)。
            </summary>
            <param name="count">生成序列号的数目</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.GetUniqueSeries">
            <summary>
            获取全系统绝对唯一的序列号(类似于GUID，但不同于GUID)。
            </summary>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.ResetSeries(System.String,System.String)">
            <summary>
            回退序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="serialValue">回退的序列号值</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.ResetSeries(System.String,System.String[])">
            <summary>
            回退序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="serialValues">回退的种子值</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.ResetSeries(System.String,System.String,System.String)">
            <summary>
            回退子序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="subName">序列号子名称</param>
            <param name="serialValue">回退的序列号值</param>
        </member>
        <member name="M:Framework.Entity.IFrameworkSeries.ResetSeries(System.String,System.String,System.String[])">
            <summary>
            回退子序列号
            </summary>
            <param name="seriesName">序列号名称</param>
            <param name="subName">序列号子名称</param>
            <param name="serialValues">回退的序列号值</param>
        </member>
        <member name="T:Framework.Entity.RequestParameter">
            <summary>
            调用代理服务接口的请求参数集
            </summary>
        </member>
        <member name="P:Framework.Entity.RequestParameter.Token">
            <summary>
            访问令牌
            </summary>
        </member>
        <member name="P:Framework.Entity.RequestParameter.CallName">
            <summary>
            服务函数接口的调用名称(格式:程序集名.类名.方法名)
            </summary>
        </member>
        <member name="P:Framework.Entity.RequestParameter.BackupQuery">
            <summary>
            备份数据查询模式
            </summary>
        </member>
        <member name="P:Framework.Entity.RequestParameter.DbCode">
            <summary>
            调用的目标服务数据编号(自动路由转发到指定的目标服务,非调用方登录的数据编号)。
            </summary> 
        </member>
        <member name="P:Framework.Entity.RequestParameter.Values">
            <summary>
            输入参数集(函数顺序参数数组)
            </summary>
        </member>
        <member name="P:Framework.Entity.RequestParameter.ValidateAssemblies">
            <summary>
            请求服务验证版本的程序集列表。
            </summary>
        </member>
        <member name="T:Framework.Entity.LoginDepartmentItem">
            <summary>
            服务注册登录应答参数。
            </summary>
        </member>
        <member name="P:Framework.Entity.LoginDepartmentItem.RoleCode">
            <summary>
            操作员登录的角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.LoginDepartmentItem.RoleText">
            <summary>
            操作员登录的角色名称
            </summary>
        </member>
        <member name="P:Framework.Entity.LoginDepartmentItem.DeptCode">
            <summary>
            操作员登录的组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.LoginDepartmentItem.DeptText">
            <summary>
            操作员登录的组织机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.LoginDepartmentItem.DeptType">
            <summary>
            操作员登录的组织机构类别
            </summary>
        </member>
        <member name="M:Framework.Entity.LoginDepartmentItem.ToUserDepts">
            <summary>
            输出为 UserDeptsItem 数据实体
            </summary>
        </member>
        <member name="T:Framework.Entity.ServiceRegisterRequest">
            <summary>
            服务注册登录请求参数。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.UsbKey">
            <summary>
            数字证书
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.Platform">
            <summary>
            登录使用的客户端平台类别
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.UserCode">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.Password">
            <summary>
            登录密码(32位MD5密文密码)。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.TerminalName">
            <summary>
            终端机名称
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.MacAddress">
            <summary>
            终端机网卡MAC地址
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.IpAddress">
            <summary>
            终端机网络通讯IP地址
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.DriveSerials">
            <summary>
            硬盘序列号
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.CPUSerials">
            <summary>
            CPU序列号
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterRequest.OperationSystem">
            <summary>
            操作系统及版本
            </summary>
        </member>
        <member name="T:Framework.Entity.ServiceRegisterResponse">
            <summary>
            服务注册登录应答参数。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.Token">
            <summary>
            登录令牌
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.DbCode">
            <summary>
            登录的数据编号(调用方数据编号)。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.Version">
            <summary>
            登录的系统版本号
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.UserID">
            <summary>
            登录操作员的唯一ID号
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.UserName">
            <summary>
            操作员登录的用户姓名
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.Password">
            <summary>
            操作员登录的密文密码
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.Language">
            <summary>
            操作员使用的语种
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.EmployeeCode">
            <summary>
            与操作员关联的员工编号(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.EmployeeName">
            <summary>
            与操作员关联的员工姓名(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.EmployeeType">
            <summary>
            与操作员关联的员工类别(如存在关联只取第一个员工的类别)。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.TerminalCode">
            <summary>
            登录的终端机编号
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceRegisterResponse.CanLoginDept">
            <summary>
            可登录组织机构列表
            </summary>
        </member>
        <member name="T:Framework.Entity.DepartmentItem">
            <summary>
            机构信息数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.ROOT">
            <summary>
            顶级机构项值
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.DeptCode">
            <summary>
            机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.DeptText">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.DeptFullText">
            <summary>
            机构的全路径名称
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.OwnerCode">
            <summary>
            上级机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.OwnerText">
            <summary>
            上级机构名称
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.DeptType">
            <summary>
            机构类别
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.IsDisabled">
            <summary>
            是否停用
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.Address">
            <summary>
            机构所位于的地址
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.Ordinal">
            <summary>
            在归属机构中的位置索引(显示顺序)。
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.Spelling">
            <summary>
            机构名称拼音码
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.Remark">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="P:Framework.Entity.DepartmentItem.CanLogin">
            <summary>
            是否为可以登录的组织机构
            </summary>
        </member>
        <member name="M:Framework.Entity.DepartmentItem.op_Implicit(Framework.Entity.DepartmentItem)~Framework.Entity.Department">
            <summary />
        </member>
        <member name="M:Framework.Entity.DepartmentItem.op_Implicit(Framework.Entity.Department)~Framework.Entity.DepartmentItem">
            <summary />
        </member>
        <member name="T:Framework.Entity.RegisterLoginItem">
            <summary>
            注册登录实体
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.DbCode">
            <summary>
            登录的数据编号
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.UserID">
            <summary>
            登录的操作员内码
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.UserCode">
            <summary>
            操作员登录用户名
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.Password">
            <summary>
            操作员登录密码(密文)
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.RoleCode">
            <summary>
            操作员登录角色编号
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.DeptCode">
            <summary>
            操作员登录组织机构编号
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.EmployeeCode">
            <summary>
            与操作员关联的员工编号(如存在关联只取第一个员工编号,如无关联返回"空字符串")。
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.LanguageCode">
            <summary>
            操作员使用语言编号
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.TerminalCode">
            <summary>
            操作员登录终端编号
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.TerminalName">
            <summary>
            操作员登录终端名称
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.MacAddress">
            <summary>
            终端机网卡MAC地址
            </summary>
        </member>
        <member name="P:Framework.Entity.RegisterLoginItem.IpAddress">
            <summary>
            终端机网络通讯IP地址
            </summary>
        </member>
        <member name="T:Framework.Entity.ProxyFactory">
            <summary>
            WCF服务代理
            </summary>
        </member>
        <member name="P:Framework.Entity.ProxyFactory.DefaultProxy">
            <summary>
            当前默认的服务代理实例(一般用于客户端或者服务端调用其他服务的情况)。
            </summary>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.SetDefaultProxy(Framework.Entity.IService)">
            <summary>
            设置默认代理实例。
            </summary>
        </member>
        <member name="P:Framework.Entity.ProxyFactory.RoutingProxy">
            <summary>
            路由代理实例(一般用于服务端调用其他服务的情况)。
            </summary>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.SetRoutingProxy(Framework.Entity.IService)">
            <summary>
            设置路由代理实例。
            </summary>
        </member>
        <member name="P:Framework.Entity.ProxyFactory.BackupQueryProxy">
            <summary>
            备份查询代理实例(一般用于服务端调用备份查询服务的情况)。
            </summary>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.SetBackupQueryProxy(Framework.Entity.IService)">
            <summary>
            设置备份查询代理实例。
            </summary>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.CreateProxy(System.Uri)">
            <summary>
            创建服务代理
            </summary>
            <param name="serviceHost">创建代理的服务器主机地址</param>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.GetProxy(System.Uri)">
            <summary>
            获取已经创建的服务代理对象实例
            </summary>
            <param name="serviceHost">创建代理的服务器主机地址</param>
        </member>
        <member name="E:Framework.Entity.ProxyFactory.MessageArrived">
            <summary>
            消息通知到达时间
            </summary>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.StartMessageListening(Framework.Entity.IService,System.String,System.String)">
            <summary>
            启动消息通知侦听
            </summary>
            <param name="proxy">侦听的代理服务</param>
            <param name="receiver">接收者</param>
            <param name="terminal">接收终端</param>
        </member>
        <member name="M:Framework.Entity.ProxyFactory.StopMessageListening">
            <summary>
            关闭消息通知侦听
            </summary>
        </member>
        <member name="T:Framework.Entity.ServiceStream">
            <summary>
            代理服务消息
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.Token">
            <summary>
            访问令牌
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.CallName">
            <summary>
            服务函数接口的调用名称(格式:程序集名称.类名称.函数名称)
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.BackupQuery">
            <summary>
            备份数据查询模式
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.DbCode">
            <summary>
            调用的目标服务数据编号(自动路由转发到指定的目标服务,非调用方登录的数据编号)。
            </summary> 
        </member>
        <member name="P:Framework.Entity.ServiceStream.ValidateAssemblies">
            <summary>
            请求服务验证版本的程序集列表。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.Compress">
            <summary>
            对输入、输出参数进行压缩传输。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.Encrypt">
            <summary>
            对输入、输出参数进行加密。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.SerializeType">
            <summary>
            消息流数据实体的序列化类型
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.HasError">
            <summary>
            消息是否为异常数据
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.BaseStream">
            <summary>
            基础流数据
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor">
            <summary>
            实例化代理服务消息
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor(System.String)">
            <summary>
            实例化代理服务消息
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor(System.Byte[])">
            <summary>
            实例化代理服务消息
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor(Framework.Entity.RequestParameter,Framework.Entity.SerializeType,Framework.Entity.ControlParameter)">
            <summary>
            实例化代理服务消息
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor(System.Exception,Framework.Entity.SerializeType)">
            <summary>
            实例化异常代理服务消息
            </summary>
            <param name="ex">异常对象</param>
            <param name="serializeType">序列化类型</param>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor(System.Object,Framework.Entity.SerializeType,System.Boolean,System.Boolean)">
            <summary>
            实例化数据的代理服务消息
            </summary>
            <param name="obj">数据实体</param>
            <param name="compress">是否压缩传输</param>
            <param name="encrypt">是否加密传输</param>
            <param name="serializeType">序列化类型</param>
        </member>
        <member name="M:Framework.Entity.ServiceStream.#ctor(System.IO.Stream)">
            <summary>
            实例化代理服务消息
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.CanRead">
            <summary>
            当前流是否支持读取。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.CanSeek">
            <summary>
            当前流是否支持查找。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.CanWrite">
            <summary>
            当前流是否支持写入。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.Length">
            <summary>
            用字节表示的当前流长度。
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceStream.Position">
            <summary>
            当前流中的位置。
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从当前流读取字节序列，并将此流中的位置提升读取的字节数。
            </summary>
            <param name="buffer">字节数组。此方法返回时，该缓冲区包含指定的字符数组，该数组的 offset 和 (offset + count -1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="offset">buffer 中的从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
        </member>
        <member name="M:Framework.Entity.ServiceStream.Read">
            <summary>
            从当前流读取所有字节序列。
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            向当前流中写入字节序列，并将此流中的当前位置提升写入的字节数。
            </summary>
            <param name="buffer">字节数组。此方法将 count 个字节从 buffer 复制到当前流。</param>
            <param name="offset">buffer 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。</param>
            <param name="count">要写入当前流的字节数。</param>        
        </member>
        <member name="M:Framework.Entity.ServiceStream.Write(System.Byte[])">
            <summary>
            向当前流中写入字节序列。
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            设置当前流中的位置。
            </summary>
            <param name="offset">相对于 origin 参数的字节偏移量。</param>
            <param name="origin">System.IO.SeekOrigin 类型的值，指示用于获取新位置的参考点。</param>        
        </member>
        <member name="M:Framework.Entity.ServiceStream.SetLength(System.Int64)">
            <summary>
            设置当前流的长度。
            </summary>
            <param name="value">所需的当前流的长度（以字节表示）。</param>
        </member>
        <member name="M:Framework.Entity.ServiceStream.Flush">
            <summary>
            将清除该流的所有缓冲区，并使得所有缓冲数据被写入到基础设备。
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.ToException">
            <summary>
            异常消息输出异常对象
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.ToObject">
            <summary>
            数据流消息输出为对象实例
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.ToObject``1">
            <summary>
            数据流消息输出为对象实例
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.GetSerializer">
            <summary>
            获取当前序列化类型对应的串行序列化对象
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceStream.op_Implicit(Framework.Entity.ServiceStream)~System.IO.Stream">
            <summary />
        </member>
        <member name="M:Framework.Entity.ServiceStream.op_Implicit(System.IO.Stream)~Framework.Entity.ServiceStream">
            <summary />
        </member>
        <member name="T:Framework.Entity.NotifyStatusItem">
            <summary>
            通知状态数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyStatusItem.ReceiveUserID">
            <summary>
            接收操作员内码
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyStatusItem.ReceiveUserCode">
            <summary>
            接收操作员编码
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyStatusItem.ReadDate">
            <summary>
            阅读时间
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyStatusItem.IsReaded">
            <summary>
            是否已读
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyStatusItem.IsDisabled">
            <summary>
            是否已删除或屏蔽
            </summary>
        </member>
        <member name="T:Framework.Entity.AssemblyItem">
            <summary>
            版本程序集信息
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.#ctor">
            <summary>
            实例化版本程序集信息
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.#ctor(App.FunctionLibrary.Filer,System.Boolean)">
            <summary>
            由文件管理器实例化程序集信息。
            </summary>
            <param name="file">文件管理器</param>
            <param name="includeContents">实例化时是否包含文件内容(二进制流数据)。</param>
        </member>
        <member name="F:Framework.Entity.AssemblyItem.Major">
            <summary>
            主要版本号
            </summary>
        </member>
        <member name="F:Framework.Entity.AssemblyItem.Minor">
            <summary>
            次要版本号
            </summary>
        </member>
        <member name="F:Framework.Entity.AssemblyItem.Revision">
            <summary>
            修订版本号
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.Version">
            <summary>
            版本号(数据编号.主要版本号.次要版本号)
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.AssemblyName">
            <summary>
            程序集名称(包括扩展名)
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.ModifyTime">
            <summary>
            程序集最后修改时间
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.CreateTime">
            <summary>
            程序集创建时间
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.Contents">
            <summary>
            程序集的二进制流数据
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.Sizes">
            <summary>
            程序集二进制流大小
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.HashValue">
            <summary>
            程序集哈希值
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.FileVersion">
            <summary>
            程序集文件版本
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyItem.IsDisabled">
            <summary>
            是否停用或作废
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.ToString">
            <summary>
            浅表字符串表达式
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.op_Equality(Framework.Entity.AssemblyItem,Framework.Entity.AssemblyItem)">
            <summary>
            确定两个程序集是否相同(不判断版本号,仅以 ”程序集名称、哈希值、修改时间、文件版本号及文件大小" 作为判断依据，忽略创建时间)。
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.op_Inequality(Framework.Entity.AssemblyItem,Framework.Entity.AssemblyItem)">
            <summary>
            确定两个程序集是否不相同(仅以 ”程序集名称、哈希值、修改时间、文件版本号及文件大小" 作为判断依据，忽略创建时间)。
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.GetHashCode">
            <summary>
            返回当前 AssemblyItem 对象的哈希代码。
            </summary>
        </member>
        <member name="M:Framework.Entity.AssemblyItem.Equals(System.Object)">
            <summary>
            返回一个值，该值指示当前 AssemblyItem 对象和指定的 AssemblyItem 对象是否表示同一个值。
            </summary>
            <param name="obj">要与当前 Version 对象进行比较的对象，或者为 null。</param>
        </member>
        <member name="T:Framework.Entity.DbCode">
            <summary>
            结构化的数据编号
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.#ctor">
            <summary>
            不允许使用的构造函数
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.#ctor(System.String)">
            <summary>
            实例化结构化的数据编号
            </summary>
            <param name="value">数据编号值</param>
        </member>
        <member name="P:Framework.Entity.DbCode.Value">
            <summary>
            结构化的数据编号值。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.ToString">
            <summary>
            结构化的数据编号字符串表达式
            </summary>
        </member>
        <member name="P:Framework.Entity.DbCode.VersionsCenter">
            <summary>
            版本中心数据编号
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.Equals(System.Object)">
            <summary>
            判断两个DbCode值是否相同
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.op_Equality(Framework.Entity.DbCode,Framework.Entity.DbCode)">
            <summary>
            判断两个DbCode值是否相同
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.op_Inequality(Framework.Entity.DbCode,Framework.Entity.DbCode)">
            <summary>
            判断两个DbCode值是否不相同
            </summary>
        </member>
        <member name="M:Framework.Entity.DbCode.op_Implicit(Framework.Entity.DbCode)~System.String">
            <summary>
            数据编号转换为字符串表达式。
            </summary>
        </member>
        <member name="T:Framework.Entity.QueryMode">
            <summary>
            备份查询模式
            </summary>
        </member>
        <member name="F:Framework.Entity.QueryMode.None">
            <summary>
            不查询备份
            </summary>
        </member>
        <member name="F:Framework.Entity.QueryMode.Default">
            <summary>
            默认查询模式
            </summary>
        </member>
        <member name="F:Framework.Entity.QueryMode.Notfound">
            <summary>
            未发现时查询备份
            </summary>
        </member>
        <member name="F:Framework.Entity.QueryMode.UnionQuery">
            <summary>
            联合查询备份
            </summary>
        </member>
        <member name="T:Framework.Entity.NotifyType">
            <summary>
            消息通知类别
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Notice">
            <summary>
            通知(存副本，由接收页面进行处理)。
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Chart">
            <summary>
            聊天(存副本，由接收页面进行处理)。
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Information">
            <summary>
            信息(无副本,由接收页面进行处理)。
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Broadcast">
            <summary>
            广播(无副本,由接收页面进行处理)。
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Warning">
            <summary>
            警告(无副本,由页面窗口进行处理)。
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.System">
            <summary>
            系统(无副本,由页面窗口进行处理)。
            </summary>
        </member>
        <member name="F:Framework.Entity.NotifyType.Error">
            <summary>
            错误、异常(无副本,由页面窗口进行处理)。
            </summary>
        </member>
        <member name="T:Framework.Entity.SerializeType">
            <summary>
            序列串行化类型
            </summary>
        </member>
        <member name="F:Framework.Entity.SerializeType.Binary">
            <summary>
             以二进制流的格式将对象进行序列化和反序列化。
            </summary>
        </member>
        <member name="F:Framework.Entity.SerializeType.Xml">
            <summary>
            将对象序列化到 XML 文档中和从 XML 文档中反序列化对象。
            </summary>
        </member>
        <member name="F:Framework.Entity.SerializeType.Json">
            <summary>
            JavaScript Object Notation格式序列化和反序列化。
            </summary>
        </member>
        <member name="F:Framework.Entity.SerializeType.Soap">
            <summary>
            以 SOAP 格式将对象或整个连接对象的图形序列化和反序列化。
            </summary>
        </member>
        <member name="F:Framework.Entity.SerializeType.Simple">
            <summary>
            简单紧凑格式将对象进行序列化和反序列化。
            </summary>
        </member>
        <member name="T:Framework.Entity.IService">
            <summary>
            代理服务契约
            </summary>
        </member>
        <member name="M:Framework.Entity.IService.CallService(System.String,System.String@,Framework.Entity.SerializeType,System.String)">
            <summary>
            调用服务函数的接口。
            </summary>
            <param name="inputs">输入参数(序列化的字符串)。</param>
            <param name="outputs">返回值(序列化的字符串)。</param>
            <param name="controls">控制参数(序列化的字符串)。</param>
            <param name="serializeType">参数序列化方式(0-Binary,1-Xml,2-Json,3-Soap,4-Simple)。</param>
            <returns>代理调用成功返回True，否则返回False(返回值为异常信息)。</returns>
        </member>
        <member name="M:Framework.Entity.IService.CallServiceCore(Framework.Entity.ServiceStream)">
            <summary>
            调用服务函数的接口。
            </summary>
            <param name="inputs">输入参数(序列化的字节序列)。</param>
        </member>
        <member name="M:Framework.Entity.IService.ActiveTest(System.Int32,System.String@)">
            <summary>
            服务链接测试(包括代理链路、数据库等)。
            </summary>
            <param name="timeout">超时时间(秒钟)</param>
            <param name="message">发生异常时的错误信息</param>
        </member>
        <member name="M:Framework.Entity.IService.MessageCallBack(System.String,System.String)">
            <summary>
            消息通知阻塞式后台调用等待函数(只有接收到通知时才返回消息编号)。
            </summary>
            <param name="receiver">消息接收者</param>
            <param name="terminal">接收终端</param>
        </member>
        <member name="T:Framework.Entity.ServiceCallBase">
            <summary>
            必须继承的服务调用基类
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.AssemblyName">
            <summary>
            调用目标程序集名称
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.ClassName">
            <summary>
            调用目标类名称
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.Compress">
            <summary>
            调用参数是否压缩传输
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.Encrypt">
            <summary>
            调用参数是否加密传输
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.Serialize">
            <summary>
            调用传输的数据序列化格式
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.BackupQueryMode">
            <summary>
            备份查询模式
            </summary>
        </member>
        <member name="F:Framework.Entity.ServiceCallBase.logger">
            <summary>
            日志管理器
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.#ctor">
            <summary>
            实例化代理调用基类
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceCallBase.RoutingService">
            <summary>
            默认的路由服务或上层服务。
            <para>代理调用的接口函数均在此服务中执行，当前代理或服务只做路由转发；</para>
            <para>缺省 null 表示当前服务或函数，不再继续路由转发。</para>
            <para>切记:如不需要路由转发，请务必设置为 null。</para>
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceCallBase.SecurityToken">
            <summary>
            总线注册安全凭证
            </summary>
        </member>
        <member name="P:Framework.Entity.ServiceCallBase.ValidateAssemblies">
            <summary>
            要求代理服务进行版本验证的程序集列表。
            </summary>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.CallProxy(System.Object[])">
            <summary>
            调用服务代理。
            </summary>
            <param name="params">输入参数数组(参数不允许为数组类型)。</param>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.CallProxy(Framework.Entity.DbCode,System.Object[])">
            <summary>
            调用服务代理。
            </summary>
            <param name="params">输入参数数组(参数不允许为数组类型)</param>
            <param name="dbcode">结构化的数据编号</param>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.CallProxy``1(System.Object[])">
            <summary>
            调用服务代理。
            </summary>
            <typeparam name="T">返回值的泛型类型。</typeparam>
            <param name="params">输入参数数组(参数不允许为数组类型)</param>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.CallProxy``1(Framework.Entity.DbCode,System.Object[])">
            <summary>
            调用服务代理。
            </summary>
            <typeparam name="T">返回值的泛型类型。</typeparam>
            <param name="params">输入参数数组(参数不允许为数组类型)</param>
            <param name="dbcode">结构化的数据编号</param>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.CallProxyCore``1(Framework.Entity.IService,Framework.Entity.DbCode,System.Reflection.MethodBase,System.Object[])">
            <summary>
            调用服务代理的基础方法。
            </summary>
            <typeparam name="T">返回值的泛型类型。</typeparam>
            <param name="params">调用参数数组</param>
            <param name="dbCode">调用的目标数据编号(缺省表示当前登录数据编号)</param>
            <param name="caller">服务函数接口的调用方方法</param>
            <param name="proxy">代理服务对象(调用的接口函数在此代理服务中执行，不使用默认前端服务 RoutingService)。</param>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.CallProxyCore``1(Framework.Entity.IService,Framework.Entity.RequestParameter,Framework.Entity.SerializeType,Framework.Entity.ControlParameter)">
            <summary>
            调用服务代理的基础方法
            </summary>
            <param name="inputs">输入参数</param>
            <param name="controls">控制参数</param>
            <param name="proxy">代理服务对象</param>
            <param name="serialize">参数序列化方式(0-二进制格式,1-Xml格式,2-Soap格式)。</param>
        </member>
        <member name="M:Framework.Entity.ServiceCallBase.GetCallName(System.Reflection.MethodBase,System.String)">
            <summary>
            获取调用方方法名
            </summary>
            <param name="callMethod">获取调用名的方法</param>
            <param name="originalCallName">原始调用名</param>
        </member>
        <member name="T:Framework.Entity.NotifyItem">
            <summary>
            通知数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.NotifyID">
            <summary>
            通知编号
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.NotifyType">
            <summary>
            通知类别
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.NotifyTitle">
            <summary>
            通知标题/摘要(最大100英文，50中文)。
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.NotifyContent">
            <summary>
            通知内容/正文。
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.NotifyContentBuffer">
            <summary>
            通知正文二进制流(已压缩)
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.ContentType">
            <summary>
            通知内容格式
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.IsTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.PublishUserID">
            <summary>
            通知发布操作员内码
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.PublishUserCode">
            <summary>
            通知发布操作员编码
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.PublishUserName">
            <summary>
            通知发布操作员名称
            </summary>
        </member>
        <member name="P:Framework.Entity.NotifyItem.PublishDate">
            <summary>
            通知发布时间
            </summary>
        </member>
        <member name="T:Framework.Entity.AssemblyValidateResults">
            <summary>
            程序集版本验证结果
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyValidateResults.Deletes">
            <summary>
            服务端已经删除的程序集列表。
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyValidateResults.Expires">
            <summary>
            已经过期失效的程序集列表。
            </summary>
        </member>
        <member name="P:Framework.Entity.AssemblyValidateResults.Addnews">
            <summary>
            服务端新增的程序集列表。
            </summary>
        </member>
        <member name="T:Framework.Entity.CustomerAccreditItem">
            <summary>
            客户授权数据实体
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.CustomerId">
            <summary>
            客户编号
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.ApplyDbCode">
            <summary>
            应用数据编号
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.FullName">
            <summary>
            客户全称
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.AliasName">
            <summary>
            客户简称
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.Principal">
            <summary>
            负责人名称
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.PrincipalContact">
            <summary>
            负责人联系方式
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.LinkMan">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.LinkManContact">
            <summary>
            联系人联系方式
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.ProductName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.ExpiryDate">
            <summary>
            服务截止日期，失效期
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.AccreditCount">
            <summary>
            授权计算机终端最大数
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.DivisionID">
            <summary>
            所在位置行政区划编号
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.DivisionText">
            <summary>
            所在位置行政区划全称
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.DivisionAddress">
            <summary>
            所在位置行政区划详细地址(除去行政区划的部分)
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.PostalAddress">
            <summary>
            通讯地址(行政区划+详细地址)
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.Disabled">
            <summary>
            客户封停
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.CreateDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.LastModifyDate">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Framework.Entity.CustomerAccreditItem.Remark">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="T:Framework.Entity.VersionItem">
            <summary>
            版本信息
            </summary>
        </member>
        <member name="M:Framework.Entity.VersionItem.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:Framework.Entity.VersionItem.#ctor(System.String,System.Boolean)">
            <summary>
            实例化
            </summary>
            <param name="dbSchemaXml">数据架构Xml格式字符串</param>
            <param name="analyzeSchema">是否解析结构(根据结构内容实例化版本信息的属性)。</param>
        </member>
        <member name="M:Framework.Entity.VersionItem.#ctor(System.Byte[],System.Boolean)">
            <summary>
            实例化
            </summary>
            <param name="dbSchema">数据架构二进制流数据</param>
            <param name="analyzeSchema">是否解析结构(根据结构内容实例化版本信息的属性)。</param>
        </member>
        <member name="F:Framework.Entity.VersionItem.Major">
            <summary>
            主要版本号
            </summary>
        </member>
        <member name="F:Framework.Entity.VersionItem.Minor">
            <summary>
            次要版本号
            </summary>
        </member>
        <member name="F:Framework.Entity.VersionItem.Revision">
            <summary>
            修订版本号
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.Version">
            <summary>
            版本号(主要版本号.次要版本号.修订版本号.数据编号)
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.FromVersion">
            <summary>
            起源版本号
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.Summary">
            <summary>
            版本摘要
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.SubmitDate">
            <summary>
            版本提交时间
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.PublishDate">
            <summary>
            版本发布时间
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.IsAllowDowngrade">
            <summary>
            是否支持降级
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.IsPublished">
            <summary>
            是否正式发布
            </summary>
        </member>
        <member name="P:Framework.Entity.VersionItem.DbSchema">
            <summary>
            数据架构的二进制流
            </summary>
        </member>
        <member name="M:Framework.Entity.VersionItem.DbSchemaToXml">
            <summary>
            转换数据架构二进制流数据为Xml格式字符串。
            </summary>
        </member>
        <member name="M:Framework.Entity.VersionItem.ToString">
            <summary>
            浅表字符串表达式
            </summary>
        </member>
        <member name="T:Framework.Entity.Versions">
            <summary>
            表示系统架构的版本号,比较时忽略数据编号。
            </summary>
        </member>
        <member name="P:Framework.Entity.Versions.DbCode">
            <summary>
            数据编号(空表示非私有版本)
            </summary>
        </member>
        <member name="P:Framework.Entity.Versions.Major">
            <summary>
            主要版本号(对基础架构做了重大的结构性变更时使用的版本号)。
            </summary>
        </member>
        <member name="P:Framework.Entity.Versions.Minor">
            <summary>
            次要版本号(对数据和程序集均做了变更时使用的版本号)。
            </summary>
        </member>
        <member name="P:Framework.Entity.Versions.Revision">
            <summary>
            修订版本号(仅对程序集做了更新，未对数据结构和内容进行变更)。
            </summary>
        </member>
        <member name="P:Framework.Entity.Versions.IsEmpty">
            <summary>
            判断版本号是否为空
            </summary>
        </member>
        <member name="P:Framework.Entity.Versions.Empty">
            <summary>
            获取一个空值的版本信息。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.#ctor(System.String)">
            <summary>
            初始化版本号
            </summary>
            <param name="version">版本号格式:"主要版本号.次要版本号.修订版本号.数据编号" 或 "主要版本号.次要版本号.修订版本号" 或 "主要版本号.次要版本号"</param>
        </member>
        <member name="M:Framework.Entity.Versions.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化版本号
            </summary>
            <param name="major">主要版本号</param>
            <param name="minor">次要版本号</param>
        </member>
        <member name="M:Framework.Entity.Versions.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化版本号
            </summary>
            <param name="major">主要版本号</param>
            <param name="minor">次要版本号</param>
            <param name="revision">修订版本号</param>
        </member>
        <member name="M:Framework.Entity.Versions.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            初始化版本号
            </summary>
            <param name="dbCode">数据编号</param>
            <param name="major">主要版本号</param>
            <param name="minor">次要版本号</param>
            <param name="revision">修订版本号</param>
        </member>
        <member name="M:Framework.Entity.Versions.#ctor(Framework.Entity.Versions,System.String)">
            <summary>
            初始化版本号
            </summary>
            <param name="dbCode">数据编号</param>
            <param name="version">版本信息</param>
        </member>
        <member name="M:Framework.Entity.Versions.Clone">
            <summary>
            返回一个新的 Version 对象，该对象的值与当前的 Version 对象相同。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.CompareTo(Framework.Entity.Versions)">
            <summary>
            将当前 Version 对象与指定的 Version 对象进行比较，并返回二者相对值的一个指示。
            </summary>
            <param name="value">要比较的对象，或为 null。</param>
            <returns>
            <para>一个有符号整数，它指示两个对象的相对值，如下表所示。</para>
            <para>小于零:当前的 Version 对象是 value 之前的一个版本。</para>
            <para>零:当前的 Version 对象是与 value 相同的版本。</para>
            <para>大于零:当前 Version 对象是 value 之后的一个版本,或 value 为 null。</para>
            </returns>
        </member>
        <member name="M:Framework.Entity.Versions.CompareTo(System.Object)">
            <summary>
            将当前 Version 对象与指定的 Version 对象进行比较，并返回二者相对值的一个指示。
            </summary>
            <param name="version">要比较的对象，或为 null。</param>
            <returns>
            <para>一个有符号整数，它指示两个对象的相对值，如下表所示。</para>
            <para>小于零:当前的 Version 对象是 value 之前的一个版本。</para>
            <para>零:当前的 Version 对象是与 value 相同的版本。</para>
            <para>大于零:当前 Version 对象是 value 之后的一个版本,或 value 为 null。</para>
            </returns>
        </member>
        <member name="M:Framework.Entity.Versions.Equals(System.Object)">
            <summary>
            返回一个值，该值指示当前 Version 对象和指定的 Version 对象是否表示同一个值。
            </summary>
            <param name="obj">要与当前 Version 对象进行比较的对象，或者为 null。</param>
        </member>
        <member name="M:Framework.Entity.Versions.Equals(Framework.Entity.Versions)">
            <summary>
            返回一个值，该值指示当前 Version 对象和指定的 Version 对象是否表示同一个值。
            </summary>
            <param name="obj">要与当前 Version 对象进行比较的对象，或者为 null。</param>
        </member>
        <member name="M:Framework.Entity.Versions.GetHashCode">
            <summary>
            返回当前 Version 对象的哈希代码。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.Parse(System.String)">
            <summary>
            将版本号的字符串表示形式转换为等效的 Version 对象。
            </summary>
            <param name="input">包含要转换的版本号的字符串(主要版本号.次要版本号.修订版本号.数据编号)。</param>
        </member>
        <member name="M:Framework.Entity.Versions.ToString">
            <summary>
            将当前版本对象的值转换为其等效的字符串表达式,不包括数据编号(主要版本号.次要版本号.修订版本号)。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.ToString(System.Boolean)">
            <summary>
            将当前版本对象的值转换为其等效的字符串表达式(主要版本号.次要版本号.修订版本号.数据编号)。
            </summary>
            <param name="includeDbCode">是否包括数据编号</param>
        </member>
        <member name="M:Framework.Entity.Versions.op_Equality(Framework.Entity.Versions,Framework.Entity.Versions)">
            <summary>
            确定两个指定的 Version 对象是否相等。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_Inequality(Framework.Entity.Versions,Framework.Entity.Versions)">
            <summary>
            确定两个指定的 Version 对象是否不相等。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_LessThan(Framework.Entity.Versions,Framework.Entity.Versions)">
            <summary>
            确定指定的第一个 Version 对象是否小于指定的第二个 Version 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_LessThanOrEqual(Framework.Entity.Versions,Framework.Entity.Versions)">
            <summary>
            确定指定的第一个 Version 对象是否小于或等于第二个 Version 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_GreaterThan(Framework.Entity.Versions,Framework.Entity.Versions)">
            <summary>
            确定指定的第一个 Version 对象是否大于指定的第二个 Version 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_GreaterThanOrEqual(Framework.Entity.Versions,Framework.Entity.Versions)">
            <summary>
            确定指定的第一个 Version 对象是否大于等于指定的第二个 Version 对象。
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_Implicit(Framework.Entity.Versions)~System.String">
            <summary>
            版本号隐形转换为字符串表达式
            </summary>
        </member>
        <member name="M:Framework.Entity.Versions.op_Implicit(System.String)~Framework.Entity.Versions">
            <summary>
            版本号字符串表达式隐形转换为版本号实体。
            </summary>
        </member>
        <member name="T:SystemManage.Entity.IntegrativeQueryItem">
            <summary>
            综合查询数据实体
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.QueryCode">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.GroupName">
            <summary>
            查询分组
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.FormText">
            <summary>
            查询窗口标题
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.ReportCode">
            <summary>
            报表编号
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.Content">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.Disabled">
            <summary>
            停用
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.QueryScript">
            <summary>
            查询脚本
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.FormID">
            <summary>
            窗口ID
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.Wheres">
            <summary>
            条件信息集合
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.Parameters">
            <summary>
            参数信息
            </summary>
        </member>
        <member name="T:SystemManage.Entity.IntegrativeQueryItem.WhereItem">
            <summary>
            条件数据实体
            </summary>
        </member>
        <member name="T:SystemManage.Entity.IntegrativeQueryItem.WhereItem.WhereTypes">
            <summary>
            条件类型
            </summary>
        </member>
        <member name="F:SystemManage.Entity.IntegrativeQueryItem.WhereItem.WhereTypes.TextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="F:SystemManage.Entity.IntegrativeQueryItem.WhereItem.WhereTypes.Combox">
            <summary>
            组合框
            </summary>
        </member>
        <member name="F:SystemManage.Entity.IntegrativeQueryItem.WhereItem.WhereTypes.CheckBox">
            <summary>
            复选框
            </summary>
        </member>
        <member name="F:SystemManage.Entity.IntegrativeQueryItem.WhereItem.WhereTypes.DateLong">
            <summary>
            长日期
            </summary>
        </member>
        <member name="F:SystemManage.Entity.IntegrativeQueryItem.WhereItem.WhereTypes.DateShort">
            <summary>
            短日期
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.Ordinal">
            <summary>
            顺序号
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.Text">
            <summary>
            条件标签
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.Types">
            <summary>
            条件类型
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.QueryScript">
            <summary>
            查询脚本
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.AllowEmpty">
            <summary>
            查询条件是否允许为空或不输入
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.RelatedName">
            <summary>
            关联的综合查询脚本的字段名称
            </summary>
        </member>
        <member name="P:SystemManage.Entity.IntegrativeQueryItem.WhereItem.RelatedWhereScript">
            <summary>
            关联的综合查询脚本的Where条件表达式
            </summary>
        </member>
    </members>
</doc>
